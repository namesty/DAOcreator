{"version":3,"sources":["lib/dependency/web3/typeValidation.ts","lib/dependency/web3/typeConversion.ts","../node_modules/@daostack/migration sync","components/common/icons/GitHub.tsx","components/common/icons/Discord.tsx","components/pages/Landing/LearnMore/index.tsx","components/shell/TopBar.tsx","components/shell/Background.tsx","components/pages/Landing/LearnMore/TopCard.tsx","components/pages/Landing/LearnMore/DetailsCard.tsx","lib/dependency/arc/types/schemes.ts","components/pages/Landing/CaseCard.tsx","components/pages/Landing/index.tsx","components/pages/About.tsx","components/common/InfoPage.tsx","components/pages/Dapp.tsx","lib/forms/Form.ts","lib/dependency/arc/types/votingMachines.ts","lib/forms/Field.ts","lib/dependency/arc/types/migration.ts","lib/dependency/arc/migration.ts","lib/state/DAOcreator.ts","lib/forms/dao/DAOForm.ts","lib/forms/dao/DAOConfigForm.ts","lib/forms/dao/MemberForm.ts","lib/forms/dao/SchemeForm.ts","lib/forms/dao/schemes/ContributionRewardForm.ts","lib/forms/dao/schemes/GenericSchemeForm.ts","lib/forms/dao/schemes/SchemeRegistrarForm.ts","lib/forms/dao/GenesisProtocolForm.ts","components/common/dao/Migrator/LogLineTypes.ts","lib/forms/fields/AddressField.ts","lib/forms/fields/DateTimeField.ts","lib/forms/fields/DurationField.ts","lib/forms/fields/PercentageField.ts","lib/forms/fields/StringField.ts","lib/forms/fields/TokenField.ts","lib/forms/validators.ts","components/common/EthAddressAvatar/index.tsx","components/common/FormField/index.tsx","components/common/dao/DAOConfigEditor.tsx","components/common/dao/MigrationParamsImport.tsx","components/pages/DAOcreator/NamingStep.tsx","components/common/dao/MemberEditor.tsx","components/common/dao/MembersSaveLoad.tsx","components/common/dao/MembersEditor.tsx","components/common/PieChart.tsx","components/common/dao/MembersAnalytics.tsx","components/pages/DAOcreator/MembersStep.tsx","components/common/dao/GenesisProtocolEditor.tsx","components/common/dao/GenesisProtocolPresetEditor.tsx","components/common/dao/GenesisProtocolAnalytics/AnalysisResultView.tsx","components/common/dao/GenesisProtocolAnalytics/utils.ts","components/common/dao/GenesisProtocolAnalytics/index.tsx","components/common/dao/SchemeEditor.tsx","components/common/dao/SchemesEditor.tsx","components/pages/DAOcreator/SchemesStep.tsx","components/pages/DAOcreator/ReviewStep.tsx","components/common/dao/Migrator/index.tsx","components/pages/DAOcreator/DeployStep.tsx","components/common/Support.tsx","components/pages/DAOcreator/index.tsx","components/App.tsx","lib/redux/reducers/index.ts","style/theme.ts","index.tsx","lib/redux/store/index.ts","lib/dependency/web3/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","isAddress","isBN","web3_utils__WEBPACK_IMPORTED_MODULE_0__","address","addr","toLowerCase","Web3Utils","number","toBN","fromWei","toWei","ethjs_unit__WEBPACK_IMPORTED_MODULE_0__","bn_js__WEBPACK_IMPORTED_MODULE_1__","bn_js__WEBPACK_IMPORTED_MODULE_1___default","n","base","endian","BN","wei","EthJsUnits","eth","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","GitHub","props","react_default","a","createElement","SvgIcon","Discord","Selection","xmlns","viewBox","componentWithStyles","withStyles","theme","createStyles","appBar","background","pointerEvents","position","toolbar","marginBottom","menuButton","left","menuIcon","color","menuPaper","height","top","menuItem","image","width","marginTop","bracket","fontSize","marginRight","marginLeft","-webkit-animation","-moz-animation","animation","contactIcons","right","contactIcon","margin","logoButton","backgroundColor","&:hover","_ref","classes","gotoHome","gotoAbout","gotoDapp","_React$useState","React","_React$useState2","Object","slicedToArray","open","setOpen","react","AppBar","className","Toolbar","IconButton","onClick","Menu_default","Drawer","onClose","anchor","paper","List","title","window","map","item","ListItem","button","key","ListItemText","primary","Grid","container","justify","alignItems","CardMedia","size","icons_GitHub","icons_Discord","Mail_default","connect","state","dispatch","push","particles","backgroundImage","backgroundOrigin","backgroundClip","overflow","flexGrow","minWidth","minHeight","Paper","square","particles_default","params","value","interactivity","events","onhover","enable","mode","padding","icon","maxWidth","description","onSelect","Card","CardContent","direction","Typography","variant","align","Help_default","panel","panelIcon","panels","link","Button","SchemeType","topCard","collapse","noCollapse","None","selection","setSelection","TopCardHighlight","root","borderRadius","bar","LinearProgress","xs","LearnMore_TopCard","Hire","Join","Collapse","in","lib_default","axis","index","disabled","LearnMore_DetailsCard","iconButton","github","test","ExitToApp_default","flex","header","subHeader","centerText","cases","paddingTop","casesDivider","caseCard","copyright","Landing_LearnMore","Divider","Landing_CaseCard","subheader","body","listItem","Header","_ref2","children","Subheader","_ref3","Body","_ref4","href","cardWrapper","cardContent","card","transform","Content","goHome","textAlign","createDao","common_InfoPage","Form","_FormState","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","_description","_displayName","inherits","createClass","displayName","values","_i","_Object$entries","entries","field","$","hasOwnProperty","get","_i2","_Object$entries2","_ref6","_ref5","FormState","GenesisProtocolPreset","ContributionReward","votingMachine","type","permissions","SchemeRegistrar","GenericScheme","contractToCall","FieldType","GenesisProtocol","opts","typeName","config","preset","Number","Easy","EasyConfig","Normal","NormalConfig","Critical","CriticalConfig","boostedVotePeriodLimit","daoBountyConst","minimumDaoBounty","queuedVotePeriodLimit","queuedVoteRequiredPercentage","preBoostedVotePeriodLimit","proposingRepReward","quietEndingPeriod","thresholdConst","votersReputationLossRatio","voteOnBehalf","activationTime","fromJSON","JSON","parse","migrate","require","addresses","arcVersion","dependencies","migrateDAO","asyncToGenerator","regenerator_default","mark","_callee2","dao","callbacks","web3","network","logTx","migration","result","wrap","_context2","prev","next","getWeb3","sent","getDefaultOpts","getNetworkName","_callee","msg","transactionHash","gasUsed","tx","gasPrice","txCost","_context","getTransaction","utils","toString","txComplete","stop","_x3","_x4","info","migrationParams","spinner","start","fail","error","confirm","userApproval","previousMigration","objectSpread","customabislocation","undefined","console","log","abrupt","name","Avatar","DAOToken","Reputation","Controller","t0","migrationAborted","_x","_x2","toDAOMigrationParams","members","schemes","orgName","daoName","tokenName","tokenSymbol","unregisterOwner","useUController","useDaoCreator","VotingMachinesParams","founders","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","scheme","voteParams","genericScheme","UGenericScheme","targetContract","voteRegisterParams","voteRemoveParams","genProtocol","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","member","fromDAOMigrationParams","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tokens","reputation","forEach","DAOForm","_Form","form","daoConfig","DAOConfigForm","MembersForm","SchemesForm","toState","fromState","_fromMigrationParamsFile","file","fileReader","json","decoder","FileReader","readAsText","Promise","reject","onloadend","TextDecoder","decode","StringField","validators","requiredText","validName","setDisplayName","setDescription","validTokenSymbol","MemberForm","getDAOTokenSymbol","AddressField","validAddress","nonZeroAddress","TokenField","validNumber","greaterThan","greaterThanOrEqual","_getDAOTokenSymbol","_Form2","_this2","requireElement","noDuplicates","b","_this3","memberForm","_fromCSV","csv","parseCSV","_this4","rows","colNames","findIndex","column","row","replace","validate","hasError","csvParse","columns","csvData","toConsumableArray","csvStringify","output","SchemeForm","_type","schemeForm","ContributionRewardForm","SchemeRegistrarForm","GenericSchemeForm","_SchemeForm","GenesisProtocolForm","DurationField","setStory","PercentageField","validPercentage","lessThanOrEqual","DateTimeField","futureDate","_preset","set","toSeconds","getunixTime","fromSeconds","fromUnixTime","LogType","Field","_FieldState","init","_story","story","FieldState","_Field","Address","DateTime","getTime","unix","Date","Duration","validDuration","positiveDuration","parts","split","seconds","days","Math","trunc","hours","minutes","Percentage","String","symbol","Token","_symbol","trim","TypeValidation","isNaN","part","currentTime","bound","elementName","array","evaluate","i","k","EthAddressAvatar","style","tabIndex","main_default","seed","FormField","_this$props","editable","material_ui_popup_state_default","popupId","popupState","FieldView","StringFieldView","TokenFieldView","DateTimeFieldView","DurationFieldView","AddressFieldView","PercentageFieldView","FormControl","fullWidth","Popover","assign","bindPopover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","FieldInformation","bindTrigger","InfoTwoTone_default","FieldError","FormHelperText","observer","TextField","label","onChange","target","onBlur","enableAutoValidationAndValidate","InputProps","startAdornment","FormField_FieldError","endAdornment","InputAdornment","event","_event$target","duration","DurationPart","inputProps","paddingBottom","MuiPickersUtilsProvider","DateFnsUtils","DateTimePicker","date","disablePast","clearable","format","inputVariant","ampm","spacing","paddingRight","paddingLeft","Slider","newValue","step","Input","min","max","_ref7","common_EthAddressAvatar","DAOConfigEditor","md","common_FormField","initState","MigrationParamsImport","onImport","_this$state","setState","onError","onFilePicked","files","from","fromMigrationParamsFile","message","Fab","Unarchive_default","Dialog","DialogContent","DialogTitle","component","accept","multiple","display","NamingStep","daoForm","toReviewStep","gutterBottom","guideText","DAOConfigEditor_DAOConfigEditor","MigrationParamsImport_MigrationParamsImport","MemberEditor","sm","MembersSaveLoad","_form$$","formClone","_files","importedMembers","fromCSV","splice","onDownload","saveAs","t1","File","toCSV","t2","t3","t4","onDownloadTemplate","_callee3","emptyForm","_context3","ButtonGroup","Archive_default","MembersEditor","handleKeyDown","selected","backup","maxScrollHeight","newMemberForm","resetSelected","onAdd","addError","pop","reset","forceUpdate","onEdit","setValues","editing","Fragment","MembersSaveLoad_MembersSaveLoad","onKeyDown","MemberEditor_MemberEditor","addButton","Add_default","maxHeight","overflowY","scrollbarWidth","editButtons","Error_default","Check_default","Edit_default","onRemove","Remove_default","Component","observable","PieChart","targetItem","data","dx_react_chart_material_ui_es","valueField","dataKey","argumentField","nameKey","dx_react_chart_es","contentComponent","text","point","onTargetItemChange","MembersAnalytics","pieChartHeadlines","common_PieChart","HelpOutline_default","questionIcon","alignSelf","MembersStep","dao_MembersAnalytics","dao_MembersEditor","GenesisProtocolEditor","formState","propName","GenesisProtocolPresetEditor","InputLabel","htmlFor","Select","native","input","FilledInput","Settings_default","aria-labelledby","DialogContentText","GenesisProtocolEditor_GenesisProtocolEditor","DialogActions","AnalysisResultView","Warning","t","fround","warning","ButtonBase","focusRipple","analyzeField","GenesisProtocolAnalytics","secondsToString","formatDays","secondsToDays","proposalSpeedAnalytics","combineResults","GP","boostDifficultyAnalytics","formatGEN","voterAlignmentAssuranceAnalytics","formatPercentage","alignmentIncentiveAnalytics","formatREP","voterMisalignmentPenaltyAnalytics","divider","GenesisProtocolAnalytics_AnalysisResultView","percentage","gen","rep","results","SchemeEditor","enabled","Icon","getParams","raised","Switch","checked","onToggle","schemeIcon","schemeDescription","param","GenesisProtocolPresetEditor_GenesisProtocolPresetEditor","dao_GenesisProtocolAnalytics","SchemesEditor","icons","fillers","ContributionRewardIcon","GenericSchemeIcon","SchemeRegistrarIcon","showFormError","_loop","schemeType","added","dao_SchemeEditor","toggled","SchemesStep","dao_SchemesEditor","ReviewStep","setStep","missingSchemeReg","titleText","modifyStep","WarningTwoTone_default","LogInfo","Info","LogError","LogTransactionResult","txHash","TransactionResult","LogUserApproval","question","onResponse","UserApproval","response","LogMigrationAborted","MigrationAborted","FileSaver","logLines","started","finished","ethSpent","logClosed","menuAnchor","exportOpen","Migrator","onStart","bind","assertThisInitialized","line","onAbort","onComplete","addLogLine","resp","migrationComplete","_this$props2","onSaveDAO","blob","Blob","stringify","Line","darkLine","lightLine","Box","resultsDivider","successText","resultWrapper","navigator","clipboard","writeText","float","expanded","ExpandMoreOutlined_default","logHeader","aria-haspopup","currentTarget","MoreVert_default","Menu_Menu","anchorEl","keepMounted","MenuItem","CircularProgress","progressBar","InfoOutlined_default","ErrorOutline_default","DoneOutline_default","Link","url","substr","approval","QuestionAnswerOutlined_default","confirmButton","aborted","SmsFailedOutlined_default","dialog","ReactPlayer_default","boxShadow","overflowX","whiteSpace","flexDirection","justifyContent","DeployStep","dao_Migrator","supportButton","bottom","supportIcon","ContactSupport_default","DAOcreator","steps","isLastStep","_steps$step","previousStep","nextStep","res","Stepper","stepper","activeStep","thisStep","Step","StepLabel","content","common_Support","justifySelf","App","shell_Background","shell_TopBar","react_router","exact","path","Landing","About","Dapp","reducer","history","combineReducers","router","connectRouter","createMuiTheme","palette","main","contrastText","secondary","createHashHistory","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","routerMiddleware","thunkMiddleware","configureStore","ReactDOM","es","esm","MuiThemeProvider","CssBaseline","components_App","document","getElementById","readyWeb3","typeValidation","TypeConversion","typeConversion","_home_travis_build_dOrgTech_DAOcreator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_dOrgTech_DAOcreator_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","accounts","ethereum","_accounts","_accounts2","getAccounts","defaultAccount","Web3","currentProvider","block","getBlock","gas","gasLimit","net","getNetworkType"],"mappings":"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","file":"static/js/main.e7b51a68.chunk.js","sourcesContent":["import * as Web3Utils from \"web3-utils\";\nimport { Address } from \"./types\";\n\nexport const isAddress = (address: Address): boolean => {\n  const addr = address.toLowerCase();\n  return addr[0] === \"0\" && addr[1] === \"x\" && Web3Utils.isAddress(addr);\n};\n\nexport const isBN = (number: Object): boolean => {\n  return Web3Utils.isBN(number);\n};\n","import * as EthJsUnits from \"ethjs-unit\";\nimport BN from \"bn.js\";\n\ntype Endianness = \"le\" | \"be\";\nexport const toBN = (\n  number: number | string | number[] | Uint8Array | Buffer | BN,\n  base?: number | \"hex\",\n  endian?: Endianness\n) => new BN(number, base, endian);\n\nexport const fromWei = (wei: BN): string => EthJsUnits.fromWei(wei, \"ether\");\nexport const toWei = (eth: BN): string => EthJsUnits.toWei(eth, \"ether\");\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 590;","/* eslint-disable max-len */\nimport React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nfunction GitHub(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  );\n}\n\nexport default GitHub;\n","/* eslint-disable max-len */\nimport React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nfunction Discord(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <svg\n        id=\"Layer_1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 245 240\"\n      >\n        <path d=\"M104.4 103.9c-5.7 0-10.2 5-10.2 11.1s4.6 11.1 10.2 11.1c5.7 0 10.2-5 10.2-11.1.1-6.1-4.5-11.1-10.2-11.1zM140.9 103.9c-5.7 0-10.2 5-10.2 11.1s4.6 11.1 10.2 11.1c5.7 0 10.2-5 10.2-11.1s-4.5-11.1-10.2-11.1z\" />\n        <path d=\"M189.5 20h-134C44.2 20 35 29.2 35 40.6v135.2c0 11.4 9.2 20.6 20.5 20.6h113.4l-5.3-18.5 12.8 11.9 12.1 11.2 21.5 19V40.6c0-11.4-9.2-20.6-20.5-20.6zm-38.6 130.6s-3.6-4.3-6.6-8.1c13.1-3.7 18.1-11.9 18.1-11.9-4.1 2.7-8 4.6-11.5 5.9-5 2.1-9.8 3.5-14.5 4.3-9.6 1.8-18.4 1.3-25.9-.1-5.7-1.1-10.6-2.7-14.7-4.3-2.3-.9-4.8-2-7.3-3.4-.3-.2-.6-.3-.9-.5-.2-.1-.3-.2-.4-.3-1.8-1-2.8-1.7-2.8-1.7s4.8 8 17.5 11.8c-3 3.8-6.7 8.3-6.7 8.3-22.1-.7-30.5-15.2-30.5-15.2 0-32.2 14.4-58.3 14.4-58.3 14.4-10.8 28.1-10.5 28.1-10.5l1 1.2c-18 5.2-26.3 13.1-26.3 13.1s2.2-1.2 5.9-2.9c10.7-4.7 19.2-6 22.7-6.3.6-.1 1.1-.2 1.7-.2 6.1-.8 13-1 20.2-.2 9.5 1.1 19.7 3.9 30.1 9.6 0 0-7.9-7.5-24.9-12.7l1.4-1.6s13.7-.3 28.1 10.5c0 0 14.4 26.1 14.4 58.3 0 0-8.5 14.5-30.6 15.2z\" />\n      </svg>\n    </SvgIcon>\n  );\n}\n\nexport default Discord;\n","import * as React from \"react\";\nimport {\n  createStyles,\n  withStyles,\n  WithStyles,\n  Theme,\n  Grid,\n  LinearProgress,\n  Collapse\n} from \"@material-ui/core\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport TopCard from \"./TopCard\";\nimport DetailsCard from \"./DetailsCard\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {}\n\nenum Selection {\n  None,\n  Hire,\n  Join\n}\n\nconst LearnMore: React.SFC<Props> = ({ classes }) => {\n  const [selection, setSelection] = React.useState(Selection.None);\n\n  const TopCardHighlight = withStyles({\n    root: {\n      height: \"5px\",\n      marginTop: \"5px\",\n      borderRadius: 250\n    },\n    bar: {\n      backgroundColor: \"#4bd2c6\"\n    }\n  })(LinearProgress);\n\n  return (\n    <>\n      <Grid\n        container\n        direction={\"row\"}\n        justify={\"center\"}\n        alignItems={\"flex-start\"}\n      >\n        <Grid item xs={5} className={classes.topCard}>\n          <TopCard\n            icon={\"/icons/flock.svg\"}\n            title={\"Hire dOrg\"}\n            description={\n              \"We can develop anything from quick prototypes to fully polished products.\"\n            }\n            onSelect={() =>\n              setSelection(\n                selection === Selection.Hire ? Selection.None : Selection.Hire\n              )\n            }\n          />\n          {selection === Selection.Hire ? (\n            <TopCardHighlight variant={\"determinate\"} value={100} />\n          ) : (\n            <></>\n          )}\n        </Grid>\n        <Grid item xs={5} className={classes.topCard}>\n          <TopCard\n            icon={\"/icons/explorer.svg\"}\n            title={\"Join dOrg\"}\n            description={\n              \"Work with a talented, ever growing community of developers from around the world.\"\n            }\n            onSelect={() =>\n              setSelection(\n                selection === Selection.Join ? Selection.None : Selection.Join\n              )\n            }\n          />\n          {selection === Selection.Join ? (\n            <TopCardHighlight variant={\"determinate\"} value={100} />\n          ) : (\n            <></>\n          )}\n        </Grid>\n      </Grid>\n      <Collapse\n        in={selection !== Selection.None}\n        className={\n          selection !== Selection.None ? classes.collapse : classes.noCollapse\n        }\n      >\n        <SwipeableViews axis={\"x\"} index={selection - 1} disabled={true}>\n          <DetailsCard\n            title={\"Don't outsource, DAOsource.\"}\n            panels={[\n              {\n                icon: \"/icons/pay.png\",\n                title: \"Pay for Results\",\n                description:\n                  \"Fixed payments are released at pre-set milestones upon your approval.\"\n              },\n              {\n                icon: \"/icons/on-demand.png\",\n                title: \"On-Demand Expertise\",\n                description:\n                  \"Get matched with a team optimized for your project’s requirements.\"\n              },\n              {\n                icon: \"/icons/cust-support.png\",\n                title: \"Customer Support\",\n                description:\n                  \"Built-in feedback processes help ensure you get what you need.\"\n              }\n            ]}\n            link={\"https://dorgtech.typeform.com/to/Q1LOP1\"}\n          />\n          <DetailsCard\n            title={\"Ready. Set. DAO.\"}\n            panels={[\n              {\n                icon: \"/icons/meritocratic.png\",\n                title: \"Meritocratic by Design\",\n                description:\n                  \"Earn ownership and governance rights in proportion to your contributions.\"\n              },\n              {\n                icon: \"/icons/transparency.png\",\n                title: \"Radical Transparency\",\n                description:\n                  \"Know exactly what your peers earn. No hidden hierarchies, just people.\"\n              },\n              {\n                icon: \"/icons/contrib-support.png\",\n                title: \"Contributor Support\",\n                description:\n                  \"Focus on work you care about, not the administrative tasks.\"\n              }\n            ]}\n            link={\"https://dorgtech.typeform.com/to/a1rMob\"}\n          />\n        </SwipeableViews>\n      </Collapse>\n    </>\n  );\n};\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    topCard: {\n      minWidth: \"380px\",\n      maxWidth: \"420px\",\n      margin: \"20px\"\n    },\n    collapse: {\n      width: \"100%\"\n    },\n    noCollapse: {\n      width: \"0px\"\n    }\n  });\n\nexport default withStyles(styles)(LearnMore);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  AppBar,\n  Toolbar,\n  CardMedia,\n  Grid,\n  IconButton,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport GitHubIcon from \"components/common/icons/GitHub\";\nimport DiscordIcon from \"components/common/icons/Discord\";\nimport \"./NeonGlow.css\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  gotoHome: () => void;\n  gotoAbout: () => void;\n  gotoDapp: () => void;\n}\n\nconst TopBar: React.SFC<Props> = ({\n  classes,\n  gotoHome,\n  gotoAbout,\n  gotoDapp\n}) => {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <AppBar position={\"static\"} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          onClick={() => setOpen(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon className={classes.menuIcon} />\n        </IconButton>\n        <Drawer\n          open={open}\n          onClose={() => setOpen(false)}\n          anchor={\"left\"}\n          classes={{\n            paper: classes.menuPaper\n          }}\n        >\n          <List>\n            {[\n              { title: \"Home\", onClick: gotoHome },\n              { title: \"About\", onClick: gotoAbout },\n              { title: \"Create A DAO\", onClick: gotoDapp },\n              {\n                title: \"Hire dOrg\",\n                onClick: () =>\n                  window.open(\"https://dorgtech.typeform.com/to/Q1LOP1\")\n              },\n              {\n                title: \"Join dOrg\",\n                onClick: () =>\n                  window.open(\"https://dorgtech.typeform.com/to/a1rMob\")\n              },\n              {\n                title: \"View Our DAO\",\n                onClick: () =>\n                  window.open(\n                    \"https://alchemy.daostack.io/dao/0xbe1a98d3452f6da6e0984589e545d4fc25af7526\"\n                  )\n              }\n            ].map(item => (\n              <ListItem\n                button\n                key={item.title}\n                onClick={() => {\n                  item.onClick();\n                  setOpen(false);\n                }}\n              >\n                <ListItemText\n                  primary={item.title}\n                  className={classes.menuItem}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <Grid container justify={\"center\"} alignItems={\"center\"}>\n          <div className={classes.bracket}>{\"{\"}</div>\n          <CardMedia image={\"/icons/dOrg.svg\"} className={classes.image} />\n          <div className={classes.bracket}>{\"}\"}</div>\n        </Grid>\n        <div className={classes.contactIcons}>\n          <IconButton\n            className={classes.contactIcon}\n            size={\"small\"}\n            onClick={() => window.open(\"https://github.com/dOrgTech\")}\n          >\n            <GitHubIcon />\n          </IconButton>\n          <IconButton\n            className={classes.contactIcon}\n            size={\"small\"}\n            onClick={() => window.open(\"https://discord.gg/Z5R4CcS\")}\n          >\n            <DiscordIcon />\n          </IconButton>\n          <IconButton\n            className={classes.contactIcon}\n            size={\"small\"}\n            onClick={() => window.open(\"mailto:contact@dorg.tech\")}\n          >\n            <MailIcon />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    appBar: {\n      background: \"rgba(2, 46, 46, 0.2)\",\n      pointerEvents: \"all\",\n      // bring forward (infront of background)\n      position: \"relative\"\n    },\n    toolbar: {\n      marginBottom: \"5px\"\n    },\n    menuButton: {\n      position: \"absolute\",\n      left: \"10px\"\n    },\n    menuIcon: {\n      color: \"#4bd2c6\"\n    },\n    menuPaper: {\n      background: \"rgba(2, 46, 46, 0.9)\",\n      height: \"305px\",\n      top: \"75px\"\n    },\n    menuItem: {\n      color: \"#4bd2c6\"\n    },\n    image: {\n      height: \"59px\",\n      width: \"122px\",\n      marginTop: \"5px\"\n    },\n    bracket: {\n      pointerEvents: \"none\",\n      fontSize: \"50px\",\n      color: \"#4bd2c6\",\n      marginRight: \"15px\",\n      marginLeft: \"15px\",\n      \"-webkit-animation\": \"neon 1.5s ease-in-out infinite alternate\",\n      \"-moz-animation\": \"neon 1.5s ease-in-out infinite alternate\",\n      animation: \"neon 1.5s ease-in-out infinite alternate\"\n    },\n    contactIcons: {\n      position: \"absolute\",\n      right: \"10px\"\n    },\n    contactIcon: {\n      color: \"#4bd2c6\",\n      margin: \"5px\"\n    },\n    logoButton: {\n      color: \"rgba(2, 46, 46, 0.1)\",\n      backgroundColor: \"rgba(2, 46, 46, 0.1)\",\n      \"&:hover\": {\n        backgroundColor: \"rgba(1, 1, 1, 0.2)\"\n      },\n      margin: \"10px\"\n    }\n  });\n\nconst componentWithStyles = withStyles(styles)(TopBar);\n\n// STATE\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    gotoHome: () => {\n      dispatch(push(\"/\"));\n    },\n    gotoAbout: () => {\n      dispatch(push(\"/about\"));\n    },\n    gotoDapp: () => {\n      dispatch(push(\"/dapp\"));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  Paper\n} from \"@material-ui/core\";\nimport Particles from \"react-particles-js\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Background: React.SFC<Props> = ({ classes }) => (\n  <Paper square={true} className={classes.background}>\n    <Particles\n      className={classes.particles}\n      params={{\n        particles: {\n          number: {\n            value: 50\n          },\n          size: {\n            value: 5\n          }\n        },\n        interactivity: {\n          events: {\n            onhover: {\n              enable: true,\n              mode: \"bubble\"\n            }\n          }\n        }\n      }}\n    />\n  </Paper>\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    background: {\n      backgroundColor: \"#0e9999\",\n      position: \"fixed\",\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    particles: {\n      //padding: \"5px\",\n      //borderRadius: \"90px\",\n      backgroundImage:\n        \"radial-gradient(circle at bottom left, rgb(0%, 26.6%, 30.8%), #077d7d);\",\n      backgroundOrigin: \"border-box\",\n      backgroundClip: \"content-box, border-box;\",\n      overflow: \"hidden\",\n      position: \"fixed\",\n      width: \"100%\",\n      height: \"100%\",\n      flexGrow: 1,\n      minWidth: 0, // So the Typography noWrap works\n      minHeight: \"100vh\"\n    }\n  });\n\nexport default withStyles(styles)(Background);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Theme,\n  WithStyles,\n  createStyles,\n  Card,\n  CardMedia,\n  CardContent,\n  IconButton,\n  Grid\n} from \"@material-ui/core\";\nimport QuestionIcon from \"@material-ui/icons/Help\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  icon: string;\n  title: string;\n  description: string;\n  onSelect: () => void;\n}\n\nconst TopCard: React.SFC<Props> = ({\n  classes,\n  icon,\n  title,\n  description,\n  onSelect\n}) => (\n  <Card className={classes.background}>\n    <CardMedia image={icon} className={classes.icon} />\n    <CardContent>\n      <Grid\n        container\n        direction={\"column\"}\n        justify={\"flex-start\"}\n        alignItems={\"center\"}\n      >\n        <Typography variant={\"h4\"} align={\"center\"} className={classes.title}>\n          {title}\n        </Typography>\n        <Typography align={\"center\"} className={classes.description}>\n          {description}\n        </Typography>\n        <IconButton onClick={onSelect} className={classes.button}>\n          <QuestionIcon />\n        </IconButton>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    background: {\n      background: \"rgba(2, 46, 46, 0.2)\",\n      pointerEvents: \"all\",\n      padding: \"10px\"\n    },\n    icon: {\n      minHeight: \"200px\",\n      maxWidth: \"200px\",\n      margin: \"auto\"\n    },\n    title: {\n      color: \"#4bd2c6\"\n    },\n    description: {\n      color: \"white\"\n    },\n    button: {\n      marginTop: \"10px\",\n      color: \"#4bd2c6\",\n      backgroundColor: \"rgba(2, 46, 46, 0.5)\",\n      \"&:hover\": {\n        backgroundColor: \"black\"\n      }\n    }\n  });\n\nexport default withStyles(styles)(TopCard);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Theme,\n  WithStyles,\n  createStyles,\n  Card,\n  CardContent,\n  Button,\n  Grid,\n  CardMedia\n} from \"@material-ui/core\";\n\ninterface PanelData {\n  icon: string;\n  title: string;\n  description: string;\n}\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  title: string;\n  panels: PanelData[];\n  link: string;\n}\n\nconst DetailsCard: React.SFC<Props> = ({ classes, title, panels, link }) => (\n  <Grid container justify={\"center\"}>\n    <Card className={classes.background}>\n      <CardContent>\n        <Grid container direction={\"column\"} alignItems={\"center\"}>\n          <Typography variant={\"h4\"} align={\"center\"} className={classes.title}>\n            {title}\n          </Typography>\n          <Grid\n            container\n            direction={\"row\"}\n            justify={\"space-evenly\"}\n            alignItems={\"center\"}\n          >\n            {panels.map(panel => (\n              <>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                  className={classes.panel}\n                >\n                  <CardMedia image={panel.icon} className={classes.panelIcon} />\n                  <CardContent>\n                    <Typography\n                      align={\"center\"}\n                      variant={\"h5\"}\n                      className={classes.title}\n                    >\n                      {panel.title}\n                    </Typography>\n                    <Typography\n                      align={\"center\"}\n                      className={classes.description}\n                    >\n                      {panel.description}\n                    </Typography>\n                  </CardContent>\n                </Grid>\n              </>\n            ))}\n          </Grid>\n          <Button\n            className={classes.button}\n            variant={\"contained\"}\n            onClick={() => window.open(link)}\n          >\n            Learn More\n          </Button>\n        </Grid>\n      </CardContent>\n    </Card>\n  </Grid>\n);\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    background: {\n      background: \"rgba(2, 46, 46, 0.2)\",\n      pointerEvents: \"all\",\n      padding: \"10px\",\n      minWidth: \"425px\",\n      maxWidth: \"800px\",\n      minHeight: \"450px\",\n      marginRight: \"20px\",\n      marginLeft: \"20px\"\n    },\n    title: {\n      color: \"#4bd2c6\",\n      marginBottom: \"25px\"\n    },\n    description: {\n      color: \"white\"\n    },\n    panel: {\n      maxWidth: \"175px\",\n      minHeight: \"285px\",\n      margin: \"5px\"\n    },\n    panelIcon: {\n      width: \"100px\",\n      height: \"100px\"\n    },\n    button: {\n      marginTop: \"10px\",\n      color: \"#4bd2c6\",\n      width: \"130px\",\n      backgroundColor: \"rgba(2, 46, 46, 0.5)\",\n      \"&:hover\": {\n        backgroundColor: \"black\"\n      }\n    }\n  });\n\nexport default withStyles(styles)(DetailsCard);\n","import { VotingMachine } from \"./index\";\nimport { Address } from \"lib/dependency/web3\";\n\nexport enum SchemeType {\n  ContributionReward,\n  SchemeRegistrar,\n  GenericScheme\n}\n\nexport interface Scheme {\n  type: SchemeType;\n  permissions: string;\n  votingMachine: VotingMachine;\n}\n\nexport class ContributionReward implements Scheme {\n  type = SchemeType.ContributionReward;\n  permissions: string = \"0x00000000\";\n  votingMachine: VotingMachine;\n\n  constructor(votingMachine: VotingMachine) {\n    this.votingMachine = votingMachine;\n  }\n}\n\n// TODO: support multiple voting machine configurations\nexport class SchemeRegistrar implements Scheme {\n  type = SchemeType.SchemeRegistrar;\n  permissions: string = \"0x0000001F\";\n  votingMachine: VotingMachine;\n\n  constructor(votingMachine: VotingMachine) {\n    this.votingMachine = votingMachine;\n  }\n}\n\nexport class GenericScheme implements Scheme {\n  type = SchemeType.GenericScheme;\n  permissions: string = \"0x00000010\";\n  votingMachine: VotingMachine;\n\n  constructor(public contractToCall: Address, votingMachine: VotingMachine) {\n    this.votingMachine = votingMachine;\n  }\n}\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Theme,\n  WithStyles,\n  createStyles,\n  Card,\n  CardMedia,\n  CardContent,\n  Grid,\n  IconButton\n} from \"@material-ui/core\";\nimport TestIcon from \"@material-ui/icons/ExitToApp\";\nimport GitHubIcon from \"components/common/icons/GitHub\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  icon: string;\n  title: string;\n  description: string;\n  github: string;\n  test?: string;\n}\n\nconst CaseCard: React.SFC<Props> = ({\n  classes,\n  icon,\n  title,\n  description,\n  github,\n  test\n}) => (\n  <Card className={classes.background}>\n    <CardMedia image={icon} className={classes.icon} />\n    <CardContent>\n      <Grid\n        container\n        direction={\"column\"}\n        justify={\"flex-start\"}\n        alignItems={\"center\"}\n      >\n        <Typography variant={\"h4\"} className={classes.title}>\n          {title}\n        </Typography>\n        <Typography align={\"center\"} className={classes.description}>\n          {description}\n        </Typography>\n        <Grid container direction={\"row\"} justify={\"center\"}>\n          <IconButton\n            className={classes.iconButton}\n            onClick={() => window.open(github)}\n          >\n            <GitHubIcon />\n          </IconButton>\n          {test ? (\n            <IconButton\n              className={classes.iconButton}\n              onClick={() => window.open(test)}\n            >\n              <TestIcon />\n            </IconButton>\n          ) : (\n            <></>\n          )}\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    background: {\n      background: \"rgba(2, 46, 46, 0.2)\",\n      pointerEvents: \"all\",\n      padding: \"10px\",\n      minHeight: \"515px\"\n    },\n    icon: {\n      minHeight: \"300px\",\n      maxWidth: \"300px\",\n      margin: \"auto\"\n    },\n    title: {\n      color: \"#4bd2c6\"\n    },\n    description: {\n      color: \"white\"\n    },\n    iconButton: {\n      margin: \"10px\",\n      color: \"#4bd2c6\",\n      backgroundColor: \"rgba(2, 46, 46, 0.5)\",\n      \"&:hover\": {\n        backgroundColor: \"black\"\n      }\n    }\n  });\n\nexport default withStyles(styles)(CaseCard);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  Grid,\n  Typography,\n  Divider\n} from \"@material-ui/core\";\nimport LearnMore from \"./LearnMore\";\nimport CaseCard from \"./CaseCard\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Landing: React.SFC<Props> = ({ classes }) => (\n  <div className={classes.root}>\n    <Grid\n      container\n      direction={\"column\"}\n      justify={\"flex-start\"}\n      alignItems={\"center\"}\n    >\n      <Grid item className={classes.centerText}>\n        <Typography align={\"center\"} variant={\"h2\"} className={classes.header}>\n          Let's Build Together\n        </Typography>\n      </Grid>\n      <LearnMore />\n      <Grid item className={classes.cases}>\n        <Divider className={classes.casesDivider} />\n        <Typography align={\"center\"} variant={\"h3\"} className={classes.header}>\n          Cases\n        </Typography>\n        <Divider />\n        <Grid\n          container\n          direction={\"row\"}\n          justify={\"space-evenly\"}\n          alignItems={\"flex-start\"}\n        >\n          <Grid item xs={3} className={classes.caseCard}>\n            <CaseCard\n              icon={\"/icons/gnosis.svg\"}\n              title={\"Continuous Funding\"}\n              description={\"Bonding curve based funding module for DAOs.\"}\n              github={\"https://github.com/dOrgTech/BC-DAO\"}\n            />\n          </Grid>\n          <Grid item xs={3} className={classes.caseCard}>\n            <CaseCard\n              icon={\"/icons/etoro.svg\"}\n              title={\"Identity DAO\"}\n              description={\"DAO curated registry of human identities.\"}\n              github={\"https://github.com/dOrgTech/ID-DAO\"}\n            />\n          </Grid>\n          <Grid item xs={3} className={classes.caseCard}>\n            <CaseCard\n              icon={\"/icons/daostack.svg\"}\n              title={\"DAOcreator\"}\n              description={\"Wizard for DAO design and deployment.\"}\n              github={\"https://github.com/dOrgTech/DAOcreator\"}\n              test={\"/#/dao-creator\"}\n            />\n          </Grid>\n          <Grid item xs={3} className={classes.caseCard}>\n            <CaseCard\n              icon={\"/icons/daostack.svg\"}\n              title={\"DAOcomponents\"}\n              description={\"DAO enabling React applications.\"}\n              github={\"https://github.com/dOrgTech/DAOcomponents\"}\n              test={\"https://www.npmjs.com/package/@dorgtech/daocomponents\"}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Typography className={classes.copyright}>\n        © 2019 dOrg, BBLLC. All Rights Reserved.\n      </Typography>\n    </Grid>\n  </div>\n);\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flex: 1,\n      height: \"100vh\",\n      // bring forward (infront of background)\n      position: \"relative\",\n      // disable pointer events, don't block background\n      pointerEvents: \"none\"\n    },\n    header: {\n      color: \"#4bd2c6\"\n    },\n    subHeader: {\n      marginBottom: \"20px\",\n      color: \"white\"\n    },\n    centerText: {\n      marginTop: \"40px\",\n      maxWidth: \"680px\"\n    },\n    cases: {\n      margin: \"20px\",\n      paddingTop: \"20px\",\n      maxWidth: \"840px\"\n    },\n    casesDivider: {\n      marginBottom: \"50px\"\n    },\n    caseCard: {\n      minWidth: \"380px\",\n      maxWidth: \"420px\",\n      margin: \"20px\"\n    },\n    copyright: {\n      color: \"white\"\n    }\n  });\n\nexport default withStyles(styles)(Landing);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {}\n\nconst About: React.SFC<Props> = ({ classes }) => {\n  const Header: React.SFC = ({ children }) => (\n    <Typography variant={\"h4\"} className={classes.header}>\n      {children}\n    </Typography>\n  );\n\n  const Subheader: React.SFC = ({ children }) => (\n    <Typography variant={\"h6\"} className={classes.subheader}>\n      {children}\n    </Typography>\n  );\n\n  const Body: React.SFC = ({ children }) => (\n    <Typography variant={\"body1\"} className={classes.body}>\n      {children}\n    </Typography>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction={\"column\"}\n        justify={\"flex-start\"}\n        className={classes.container}\n      >\n        <Header>\n          dOrg is a self-organized developer community that wills software into\n          existence.\n        </Header>\n        <Body>\n          We are a cooperative of freelancers building tools for distributed\n          organizations. We make ecosystem partnerships and execute on work that\n          advances the open-source DAO ecosystem.\n        </Body>\n        <Header>How we do it.</Header>\n        <Body>\n          Our freelancer co-op rests on two core technologies:\n          <li className={classes.listItem}>\n            <i>DAOstack:</i> We conduct 100% of our operations and governance\n            through{\" \"}\n            <a className={classes.link} href=\"https://alchemy.daostack.io\">\n              our own DAO\n            </a>\n            .\n          </li>\n          <li className={classes.listItem}>\n            <i>Blockchain Based LLC:</i> Our DAO is a legally registered{\" \"}\n            <a\n              className={classes.link}\n              href=\"https://legislature.vermont.gov/statutes/section/11/025/04173\"\n            >\n              Vermont BBLLC\n            </a>\n            .\n          </li>\n        </Body>\n        <Header>F.A.Q.</Header>\n        <Subheader>What's a DAO?</Subheader>\n        <Body>\n          A Decentralized Autonomous Organization (DAO) is an entity whose\n          bylaws are self-enforcing. Because DAOs run exactly as programmed\n          without human operators, participants can avoid bureaucracy and focus\n          on the tasks at hand.\n        </Body>\n        <Subheader>Who needs a DAO?</Subheader>\n        <Body>\n          Any group that needs to allocate resources, make decisions and govern\n          itself in a manner that is:\n          <li className={classes.listItem}>Cheap → bureaucracy-free</li>\n          <li className={classes.listItem}>Secure → resilient to bad actors</li>\n          <li className={classes.listItem}>Scalable → effective at scale</li>\n          <li className={classes.listItem}>Dynamic → fully programmable</li>\n          <li className={classes.listItem}>\n            Borderless → jurisdiction agnostic{\" \"}\n          </li>\n          <li className={classes.listItem}>Transparent → easy to audit</li>\n        </Body>\n      </Grid>\n    </div>\n  );\n};\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flex: 1,\n      height: \"100vh\",\n      // bring forward (infront of background)\n      position: \"relative\",\n      // disable pointer events, don't block background\n      pointerEvents: \"none\"\n    },\n    container: {\n      width: \"80%\",\n      maxWidth: \"800px\",\n      margin: \"auto\",\n      marginBottom: \"20px\"\n    },\n    header: {\n      marginTop: \"30px\",\n      color: \"#4bd2c6\",\n      pointerEvents: \"all\"\n    },\n    subheader: {\n      marginTop: \"15px\",\n      marginBottom: \"-10px\",\n      color: \"#4bd2c6\",\n      pointerEvents: \"all\"\n    },\n    body: {\n      marginTop: \"15px\",\n      color: \"white\",\n      pointerEvents: \"all\"\n    },\n    link: {\n      color: \"white\"\n    },\n    listItem: {\n      marginLeft: \"15px\",\n      marginTop: \"5px\"\n    }\n  });\n\nexport default withStyles(styles)(About);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  goHome: () => void;\n  Content: React.FunctionComponent;\n}\n\nconst InfoPage: React.SFC<Props> = ({ classes, goHome, Content }) => (\n  <div className={classes.root}>\n    <div className={classes.cardWrapper}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Content />\n        </CardContent>\n      </Card>\n    </div>\n  </div>\n);\n\n// STYLE\nconst padding = 50;\nconst minWidth = 800;\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      minWidth: minWidth + padding * 2,\n      height: \"100vh\"\n    },\n    cardWrapper: {\n      width: 0,\n      marginTop: \"50px\",\n      position: \"relative\",\n      left: \"50%\",\n      pointerEvents: \"none\"\n    },\n    cardContent: {},\n    card: {\n      maxWidth: 1200,\n      minWidth: minWidth,\n      position: \"inherit\",\n      transform: \"translateX(-50%)\",\n      pointerEvents: \"all\",\n      marginBottom: 40\n    },\n    button: {\n      margin: 10\n    }\n  });\n\nconst componentWithStyles = withStyles(styles)(InfoPage);\n\n// STATE\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    goHome: () => {\n      dispatch(push(\"/\"));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport {\n  withStyles,\n  Typography,\n  Button,\n  Theme,\n  WithStyles,\n  createStyles\n} from \"@material-ui/core\";\nimport InfoPage from \"components/common/InfoPage\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  createDao: () => void;\n}\n\nconst Dapp: React.SFC<Props> = ({ classes, createDao }) => (\n  <InfoPage\n    Content={() => (\n      <>\n        <Typography variant=\"h2\" className={classes.header}>\n          Warning\n        </Typography>\n        <Typography variant=\"h5\">Metamask Required</Typography>\n        <Typography variant=\"body1\" className={classes.body}>\n          To interact with this application you will need the{\" \"}\n          <a href=\"https://metamask.io\">Metamask browser extension</a>.\n        </Typography>\n        <Typography variant=\"h5\">DAO Creator is in Alpha</Typography>\n        <Typography variant=\"body1\" className={classes.body}>\n          This tool is for advanced users only. We do not advise new users\n          deploy DAOs to mainnet at this time.\n          <br />\n          To provide feedback, go{\" \"}\n          <a href=\"https://docs.google.com/forms/d/1qMwTYMFpLW0KU8l9dnHkhixwhz-fo5Qtqumjg_7JZ80\">\n            here\n          </a>\n          . For any questions, reach out on{\" \"}\n          <a href=\"https://discord.gg/6Kujmad\">Discord</a>!\n        </Typography>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          className={classes.button}\n          onClick={createDao}\n        >\n          Proceed\n        </Button>\n      </>\n    )}\n  />\n);\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    body: {\n      margin: 20\n    },\n    header: {\n      margin: 20,\n      textAlign: \"center\"\n    },\n    button: {\n      margin: 10\n    }\n  });\n\nconst componentWithStyles = withStyles(styles)(Dapp);\n\n// STATE\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    createDao: () => {\n      dispatch(push(\"/dao-creator\"));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(componentWithStyles);\n","import { FormState, ValidatableMapOrArray } from \"formstate\";\n\nexport abstract class Form<\n  StateType,\n  T extends ValidatableMapOrArray\n> extends FormState<T> {\n  public abstract toState(): StateType;\n  public abstract fromState(state: StateType): void;\n\n  private _description: string = \"\";\n  private _displayName: string = \"\";\n\n  setDescription(description: string): Form<StateType, T> {\n    this._description = description;\n    return this;\n  }\n\n  get description(): string {\n    return this._description;\n  }\n\n  setDisplayName(displayName: string): Form<StateType, T> {\n    this._displayName = displayName;\n    return this;\n  }\n\n  get displayName(): string {\n    return this._displayName;\n  }\n\n  setValues(values: { [key in keyof T]?: any }): Form<StateType, T> {\n    // iterate through all the possible keys\n    for (let [key, value] of Object.entries(values)) {\n      const field = (this.$ as any)[key];\n      // if it's a FieldState, it has the property \"value\"\n      if ((field as Object).hasOwnProperty(\"value\")) {\n        field.value = value;\n      } else {\n        (this.$ as any)[key] = value;\n      }\n    }\n    return this;\n  }\n\n  get values(): { [key in keyof T]: any } {\n    let values: any = {};\n\n    for (let [key, value] of Object.entries(this.$)) {\n      if ((value as Object).hasOwnProperty(\"value\")) {\n        values[key] = value.value;\n      } else {\n        values[key] = value;\n      }\n    }\n\n    return values;\n  }\n}\n","import { Address } from \"lib/dependency/web3\";\n\nexport interface VotingMachine {\n  typeName: string;\n}\n\nexport interface GenesisProtocolConfig {\n  queuedVoteRequiredPercentage: number;\n  queuedVotePeriodLimit: number;\n  thresholdConst: number;\n  proposingRepReward: number;\n  minimumDaoBounty: number;\n  boostedVotePeriodLimit: number;\n  daoBountyConst: number;\n  activationTime: number;\n  preBoostedVotePeriodLimit: number;\n  quietEndingPeriod: number;\n  voteOnBehalf: Address;\n  votersReputationLossRatio: number;\n}\n\nexport enum GenesisProtocolPreset {\n  Easy = 1,\n  Normal,\n  Critical\n}\n\nexport interface GenesisProtocolOpts {\n  config?: GenesisProtocolConfig;\n  preset?: GenesisProtocolPreset;\n}\n\nexport class GenesisProtocol implements VotingMachine {\n  public typeName: string = \"GenesisProtocol\";\n  public config: GenesisProtocolConfig;\n  public preset?: GenesisProtocolPreset;\n\n  public static get EasyConfig(): GenesisProtocolConfig {\n    return {\n      boostedVotePeriodLimit: 129600, // 1.5 days\n      daoBountyConst: 10,\n      minimumDaoBounty: 50, // 50 GEN\n      queuedVotePeriodLimit: 604800, // 7 days\n      queuedVoteRequiredPercentage: 50, // 50%\n      preBoostedVotePeriodLimit: 43200, // 12 hours\n      proposingRepReward: 10, // 10 REP\n      quietEndingPeriod: 86400, // 1 day\n      thresholdConst: 1200,\n      votersReputationLossRatio: 1, // 1%\n      voteOnBehalf: \"0x0000000000000000000000000000000000000000\",\n      activationTime: 0\n    };\n  }\n\n  public static get NormalConfig(): GenesisProtocolConfig {\n    return {\n      boostedVotePeriodLimit: 345600, // 4 days\n      daoBountyConst: 10,\n      minimumDaoBounty: 150, // 150 GEN\n      queuedVotePeriodLimit: 2592000, // 30 days\n      queuedVoteRequiredPercentage: 50, // 50%\n      preBoostedVotePeriodLimit: 86400, // 1 day\n      proposingRepReward: 50, // 50 REP\n      quietEndingPeriod: 172800, // 2 day\n      thresholdConst: 1200,\n      votersReputationLossRatio: 4, // 4%\n      voteOnBehalf: \"0x0000000000000000000000000000000000000000\",\n      activationTime: 0\n    };\n  }\n\n  public static get CriticalConfig(): GenesisProtocolConfig {\n    return {\n      boostedVotePeriodLimit: 691200, // 8 days\n      daoBountyConst: 10,\n      minimumDaoBounty: 500, // 500 GEN\n      queuedVotePeriodLimit: 5184000, // 60 days\n      queuedVoteRequiredPercentage: 50, // 50%\n      preBoostedVotePeriodLimit: 172800, // 2 day\n      proposingRepReward: 200, // 200 REP\n      quietEndingPeriod: 345600, // 4 day\n      thresholdConst: 1500,\n      votersReputationLossRatio: 4, // 4%\n      voteOnBehalf: \"0x0000000000000000000000000000000000000000\",\n      activationTime: 0\n    };\n  }\n\n  constructor(opts: GenesisProtocolOpts) {\n    if (opts.preset) {\n      if (typeof opts.preset === \"string\") {\n        opts.preset = Number(opts.preset);\n      }\n\n      this.preset = opts.preset;\n\n      switch (opts.preset) {\n        case GenesisProtocolPreset.Easy:\n          this.config = GenesisProtocol.EasyConfig;\n          break;\n        case GenesisProtocolPreset.Normal:\n          this.config = GenesisProtocol.NormalConfig;\n          break;\n        case GenesisProtocolPreset.Critical:\n          this.config = GenesisProtocol.CriticalConfig;\n          break;\n        default:\n          throw Error(\"Preset not implemented.\");\n      }\n    } else if (opts.config) {\n      this.config = opts.config;\n    } else {\n      throw Error(\n        \"Invalid construction arguments. Please use a custom config or a preset.\"\n      );\n    }\n  }\n}\n","import { FieldState } from \"formstate\";\nimport {\n  StringField,\n  TokenField,\n  DateTimeField,\n  DurationField,\n  AddressField,\n  PercentageField\n} from \"lib/forms\";\n\nexport enum FieldType {\n  String,\n  Token,\n  DateTime,\n  Duration,\n  Address,\n  Percentage\n}\n\nexport type AnyField =\n  | StringField\n  | TokenField\n  | DateTimeField\n  | DurationField\n  | AddressField\n  | PercentageField;\n\nexport abstract class Field<\n  ValueType,\n  DerivedType extends Field<ValueType, DerivedType>\n> extends FieldState<ValueType> {\n  private _description: string = \"\";\n  private _displayName: string = \"\";\n  private _story: string = \"\";\n  private _type: FieldType;\n\n  constructor(init: ValueType, type: FieldType) {\n    super(init);\n    this._type = type;\n  }\n\n  setDescription(description: string): DerivedType {\n    this._description = description;\n    return (this as any) as DerivedType;\n  }\n\n  get description(): string {\n    return this._description;\n  }\n\n  setDisplayName(displayName: string): DerivedType {\n    this._displayName = displayName;\n    return (this as any) as DerivedType;\n  }\n\n  get displayName(): string {\n    return this._displayName;\n  }\n\n  setStory(story: string): DerivedType {\n    this._story = story;\n    return (this as any) as DerivedType;\n  }\n\n  get story(): string {\n    return this._story;\n  }\n\n  get type(): FieldType {\n    return this._type;\n  }\n}\n","import { Member, GenesisProtocolConfig } from \"./index\";\nimport { Address } from \"lib/dependency/web3\";\n\nexport interface DAOMigrationParams {\n  orgName: string;\n  tokenName: string;\n  tokenSymbol: string;\n  VotingMachinesParams: GenesisProtocolConfig[];\n  schemes: {\n    ContributionReward?: boolean;\n    UGenericScheme?: boolean;\n    SchemeRegistrar?: boolean;\n  };\n  ContributionReward?: {\n    voteParams?: number;\n  }[];\n  UGenericScheme?: {\n    voteParams?: number;\n    targetContract: string;\n  }[];\n  SchemeRegistrar?: {\n    voteRegisterParams?: number;\n    voteRemoveParams?: number;\n  }[];\n  unregisterOwner: boolean;\n  useUController: boolean;\n  useDaoCreator: boolean;\n  founders: Member[];\n}\n\nexport interface DAOMigrationResult {\n  arcVersion: string;\n  name: string;\n  Avatar: Address;\n  DAOToken: Address;\n  Reputation: Address;\n  Controller: Address;\n}\n\nexport interface DAOMigrationCallbacks {\n  userApproval: (msg: string) => Promise<boolean>;\n  info: (msg: string) => void;\n  error: (msg: string) => void;\n  txComplete: (msg: string, txHash: string, txCost: number) => Promise<void>;\n  migrationAborted: (err: Error) => void;\n  migrationComplete: (result: DAOMigrationResult) => void;\n}\n\nexport const toJSON = (params: DAOMigrationParams): string => {\n  return JSON.stringify(params, null, 2);\n};\n\nexport const fromJSON = (params: string): DAOMigrationParams => {\n  return JSON.parse(params);\n};\n","// TODO: additional options (use DAOcreator, etc)\n/* eslint-disable */\n\nimport {\n  DAOMigrationParams,\n  DAOMigrationCallbacks,\n  DAOMigrationResult\n} from \"./types\";\nimport { getWeb3, getNetworkName, getDefaultOpts } from \"lib/dependency/web3\";\n\nconst migrate = require(\"@daostack/migration/migrate-dao\");\nconst addresses = require(\"@daostack/migration/migration.json\");\nconst arcVersion = require(\"@daostack/migration/package.json\").dependencies[\n  \"@daostack/arc\"\n];\n\nexport const migrateDAO = async (\n  dao: DAOMigrationParams,\n  callbacks: DAOMigrationCallbacks\n): Promise<DAOMigrationResult | undefined> => {\n  const web3 = await getWeb3();\n  const opts = await getDefaultOpts();\n  const network = await getNetworkName();\n\n  const logTx = async ({ transactionHash, gasUsed }: any, msg: string) => {\n    const tx = await web3.eth.getTransaction(transactionHash);\n\n    if (tx != null) {\n      const gasPrice = tx.gasPrice;\n      const txCost = web3.utils.fromWei(\n        (gasUsed * gasPrice).toString(),\n        \"ether\"\n      );\n      callbacks.txComplete(msg, transactionHash, txCost);\n    }\n  };\n\n  // Report back to caller the version of Arc being used\n  callbacks.info(`Using Arc Version: ${arcVersion}`);\n\n  try {\n    const migration = await migrate({\n      migrationParams: dao,\n      web3,\n      spinner: {\n        start: callbacks.info,\n        fail: callbacks.error\n      },\n      confirm: callbacks.userApproval,\n      logTx,\n      opts,\n      previousMigration: { ...addresses[network] },\n      customabislocation: undefined\n    });\n\n    // TODO: create an interface for the migration result\n    const result = migration!.dao[arcVersion];\n    console.log(result);\n\n    return {\n      arcVersion: arcVersion,\n      name: result.name,\n      Avatar: result.Avatar,\n      DAOToken: result.DAOToken,\n      Reputation: result.Reputation,\n      Controller: result.Controller\n    };\n  } catch (e) {\n    callbacks.migrationAborted(e);\n    return undefined;\n  }\n};\n","import {\n  DAOConfig,\n  DAOMigrationParams,\n  Member,\n  Scheme,\n  SchemeType,\n  GenericScheme,\n  ContributionReward,\n  SchemeRegistrar,\n  GenesisProtocol\n} from \"lib/dependency/arc\";\nexport {\n  SchemeType,\n  ContributionReward,\n  SchemeRegistrar,\n  GenericScheme,\n  GenesisProtocol,\n  GenesisProtocolPreset\n} from \"lib/dependency/arc\";\n\nexport type DAOConfig = DAOConfig;\nexport type Member = Member;\nexport type Scheme = Scheme;\n\nexport interface DAOcreatorState {\n  config: DAOConfig;\n  members: Member[];\n  schemes: Scheme[];\n}\n\nexport const toDAOMigrationParams = (\n  dao: DAOcreatorState\n): DAOMigrationParams => {\n  const { config, members, schemes } = dao;\n  const params: DAOMigrationParams = {\n    orgName: config.daoName,\n    tokenName: config.tokenName,\n    tokenSymbol: config.tokenSymbol,\n    unregisterOwner: true,\n    useUController: false,\n    useDaoCreator: true,\n    schemes: {},\n    VotingMachinesParams: [],\n    founders: []\n  };\n\n  // schemes & voting machine params\n  for (const scheme of schemes) {\n    switch (scheme.type) {\n      case SchemeType.ContributionReward: {\n        if (!params.ContributionReward) {\n          params.ContributionReward = [];\n        }\n        params.ContributionReward.push({\n          voteParams: params.VotingMachinesParams.length\n        });\n        params.schemes.ContributionReward = true;\n        break;\n      }\n      case SchemeType.GenericScheme: {\n        const genericScheme = scheme as GenericScheme;\n        if (!params.UGenericScheme) {\n          params.UGenericScheme = [];\n        }\n        params.UGenericScheme.push({\n          voteParams: params.VotingMachinesParams.length,\n          targetContract: genericScheme.contractToCall\n        });\n        params.schemes.UGenericScheme = true;\n        break;\n      }\n      case SchemeType.SchemeRegistrar: {\n        if (!params.SchemeRegistrar) {\n          params.SchemeRegistrar = [];\n        }\n        params.SchemeRegistrar.push({\n          voteRegisterParams: params.VotingMachinesParams.length,\n          voteRemoveParams: params.VotingMachinesParams.length\n        });\n        params.schemes.SchemeRegistrar = true;\n        break;\n      }\n    }\n\n    const genProtocol = scheme.votingMachine as GenesisProtocol;\n    params.VotingMachinesParams.push(genProtocol.config);\n  }\n\n  for (const member of members) {\n    params.founders.push(member);\n  }\n\n  return params;\n};\n\nexport const fromDAOMigrationParams = (\n  params: DAOMigrationParams\n): DAOcreatorState => {\n  // config\n  const config: DAOConfig = {\n    daoName: params.orgName,\n    tokenSymbol: params.tokenSymbol,\n    tokenName: params.tokenName\n  };\n\n  // members\n  let members: Member[] = [];\n\n  for (const member of params.founders) {\n    members.push({\n      address: member.address,\n      tokens: member.tokens ? member.tokens : 0,\n      reputation: member.reputation\n    });\n  }\n\n  // schemes\n  let schemes: Scheme[] = [];\n\n  Object.keys(params.schemes).forEach(type => {\n    // TODO: support multiple schemes of a single type\n    switch (type) {\n      case \"ContributionReward\":\n        if (params.schemes[type]) {\n          const config = params.ContributionReward\n            ? params.ContributionReward[0]\n            : undefined;\n          let index;\n\n          if (config && config.voteParams) {\n            index = config.voteParams;\n          } else {\n            index = 0;\n          }\n\n          const votingMachine = new GenesisProtocol({\n            config: params.VotingMachinesParams[index]\n          });\n          schemes.push(new ContributionReward(votingMachine));\n        }\n        break;\n      case \"UGenericScheme\":\n        if (params.schemes[type]) {\n          const config = params.UGenericScheme\n            ? params.UGenericScheme[0]\n            : undefined;\n          let index;\n          let address;\n\n          if (config && config.voteParams) {\n            index = config.voteParams;\n          } else {\n            index = 0;\n          }\n\n          if (config && config.targetContract) {\n            address = config.targetContract;\n          } else {\n            address = \"0x0000000000000000000000000000000000000000\";\n          }\n\n          const votingMachine = new GenesisProtocol({\n            config: params.VotingMachinesParams[index]\n          });\n\n          schemes.push(new GenericScheme(address, votingMachine));\n        }\n        break;\n      case \"SchemeRegistrar\":\n        if (params.schemes[type]) {\n          const config = params.SchemeRegistrar\n            ? params.SchemeRegistrar[0]\n            : undefined;\n          let index;\n\n          if (config) {\n            if (config.voteRegisterParams) {\n              index = config.voteRegisterParams;\n            } else if (config.voteRemoveParams) {\n              index = config.voteRemoveParams;\n            } else {\n              index = 0;\n            }\n          } else {\n            index = 0;\n          }\n\n          const votingMachine = new GenesisProtocol({\n            config: params.VotingMachinesParams[index]\n          });\n\n          schemes.push(new SchemeRegistrar(votingMachine));\n        }\n        break;\n      default:\n        break;\n    }\n  });\n\n  return {\n    config,\n    members,\n    schemes\n  };\n};\n","import { Form } from \"lib/forms/Form\";\nimport { DAOConfigForm, MembersForm, SchemesForm } from \"lib/forms\";\nimport { DAOcreatorState, fromDAOMigrationParams } from \"lib/state\";\nimport { fromJSON, DAOMigrationParams } from \"lib/dependency/arc\";\n\nexport class DAOForm extends Form<\n  DAOcreatorState,\n  {\n    config: DAOConfigForm;\n    members: MembersForm;\n    schemes: SchemesForm;\n  }\n> {\n  constructor(form?: DAOForm) {\n    const daoConfig = new DAOConfigForm(form ? form.$.config : undefined);\n    const getDAOTokenSymbol = () => daoConfig.$.tokenSymbol.value;\n\n    super({\n      config: daoConfig,\n      members: new MembersForm(\n        getDAOTokenSymbol,\n        form ? form.$.members : undefined\n      ),\n      schemes: new SchemesForm(form ? form.$.schemes : undefined)\n    });\n  }\n\n  public toState(): DAOcreatorState {\n    return {\n      config: this.$.config.toState(),\n      members: this.$.members.toState(),\n      schemes: this.$.schemes.toState()\n    };\n  }\n\n  public fromState(state: DAOcreatorState) {\n    this.$.config.fromState(state.config);\n    this.$.members.fromState(state.members);\n    this.$.schemes.fromState(state.schemes);\n  }\n\n  public async fromMigrationParamsFile(file: File): Promise<void> {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file);\n\n    await new Promise(\n      (resolve, reject) => (fileReader.onloadend = () => resolve())\n    );\n\n    if (fileReader.result === null) {\n      throw Error(\"Unaable to read file.\");\n    }\n\n    const json = fileReader.result as string | ArrayBuffer;\n    let params: DAOMigrationParams;\n\n    if (typeof json === \"string\") {\n      params = fromJSON(json as string);\n    } else {\n      const decoder = new TextDecoder();\n      params = fromJSON(decoder.decode(json as ArrayBuffer));\n    }\n\n    this.fromState(fromDAOMigrationParams(params));\n  }\n}\n","import { Form } from \"lib/forms/Form\";\nimport {\n  StringField,\n  requiredText,\n  validTokenSymbol,\n  validName\n} from \"lib/forms\";\nimport { DAOConfig } from \"lib/state\";\n\nexport class DAOConfigForm extends Form<\n  DAOConfig,\n  {\n    daoName: StringField;\n    tokenName: StringField;\n    tokenSymbol: StringField;\n  }\n> {\n  constructor(form?: DAOConfigForm) {\n    super({\n      daoName: new StringField(form ? form.$.daoName.value : \"\")\n        .validators(requiredText, validName)\n        .setDisplayName(\"DAO Name\")\n        .setDescription(\"The name of the DAO.\"),\n\n      tokenName: new StringField(form ? form.$.tokenName.value : \"\")\n        .validators(requiredText, validName)\n        .setDisplayName(\"Token Name\")\n        .setDescription(\"The name of the DAO's token.\"),\n\n      tokenSymbol: new StringField(form ? form.$.tokenSymbol.value : \"\")\n        .validators(requiredText, validTokenSymbol)\n        .setDisplayName(\"Token Symbol\")\n        .setDescription(\"The token's 4 letter symbol for exchanges.\")\n    });\n  }\n\n  public toState(): DAOConfig {\n    return {\n      daoName: this.$.daoName.value,\n      tokenName: this.$.tokenName.value,\n      tokenSymbol: this.$.tokenSymbol.value\n    };\n  }\n\n  public fromState(state: DAOConfig) {\n    this.$.daoName.value = state.daoName;\n    this.$.tokenName.value = state.tokenName;\n    this.$.tokenSymbol.value = state.tokenSymbol;\n  }\n}\n","import { Form } from \"lib/forms/Form\";\nimport {\n  TokenField,\n  AddressField,\n  requiredText,\n  validAddress,\n  validNumber,\n  requireElement,\n  noDuplicates,\n  nonZeroAddress,\n  greaterThan,\n  greaterThanOrEqual\n} from \"lib/forms\";\nimport { Member } from \"lib/state\";\nimport csvParse from \"csv-parse\";\nimport csvStringify from \"csv-stringify\";\n\nexport class MemberForm extends Form<\n  Member,\n  {\n    address: AddressField;\n    reputation: TokenField;\n    tokens: TokenField;\n  }\n> {\n  private _getDAOTokenSymbol: () => string;\n\n  get getDAOTokenSymbol() {\n    return this._getDAOTokenSymbol;\n  }\n\n  constructor(getDAOTokenSymbol: () => string, form?: MemberForm) {\n    super({\n      address: new AddressField(form ? form.$.address.value : \"\")\n        .validators(requiredText, validAddress, nonZeroAddress)\n        .setDisplayName(\"Address\")\n        .setDescription(\"The member's public address.\"),\n\n      reputation: new TokenField(\"REP\", form ? form.$.reputation.value : \"\")\n        .validators(requiredText, validNumber, greaterThan(0))\n        .setDisplayName(\"Reputation\")\n        .setDescription(\n          \"The member's reputation (voting power) within the DAO.\"\n        ),\n\n      tokens: new TokenField(getDAOTokenSymbol, form ? form.$.tokens.value : \"\")\n        .validators(requiredText, validNumber, greaterThanOrEqual(0))\n        .setDisplayName(\"Tokens\")\n        .setDescription(\"The number of DAO tokens this member owns.\")\n    });\n    this._getDAOTokenSymbol = getDAOTokenSymbol;\n  }\n\n  public toState(): Member {\n    return {\n      address: this.$.address.value,\n      tokens: Number(this.$.tokens.value),\n      reputation: Number(this.$.reputation.value)\n    };\n  }\n\n  public fromState(state: Member) {\n    this.$.address.value = state.address;\n    this.$.reputation.value = state.reputation.toString();\n    this.$.tokens.value = state.tokens ? state.tokens.toString() : \"0\";\n  }\n}\n\nexport class MembersForm extends Form<Member[], MemberForm[]> {\n  private _getDAOTokenSymbol: () => string;\n\n  public get getDAOTokenSymbol(): () => string {\n    return this._getDAOTokenSymbol;\n  }\n\n  constructor(getDAOTokenSymbol: () => string, form?: MembersForm) {\n    super(form ? form.$ : ([] as MemberForm[]));\n    this._getDAOTokenSymbol = getDAOTokenSymbol;\n    this.validators(\n      requireElement(\"Member\"),\n      noDuplicates(\n        (a: MemberForm, b: MemberForm) =>\n          a.$.address.value.toLowerCase() === b.$.address.value.toLowerCase(),\n        (value: MemberForm) => value.$.address.value\n      )\n    );\n  }\n\n  public toState(): Member[] {\n    return this.$.map((member: MemberForm): Member => member.toState());\n  }\n\n  public fromState(state: Member[]) {\n    this.$ = state.map(member => {\n      const memberForm = new MemberForm(this._getDAOTokenSymbol);\n      memberForm.fromState(member);\n      return memberForm;\n    });\n  }\n\n  public async fromCSV(file: File): Promise<void> {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file);\n\n    await new Promise(\n      (resolve, reject) => (fileReader.onloadend = () => resolve())\n    );\n\n    const csv = fileReader.result;\n\n    if (csv === null) {\n      throw Error(\"Unable to read file.\");\n    }\n\n    const parseCSV = (resolve: () => void, reject: (error: Error) => void) => (\n      error: Error | undefined,\n      rows: any\n    ) => {\n      if (error !== undefined) {\n        throw error;\n      }\n\n      if (!rows || rows.length === 0) {\n        reject(new Error(\"Empty CSV\"));\n        return;\n      }\n\n      const colNames = Object.keys(rows[0]);\n\n      // Verify all necessary columns are present\n      [\"address\", \"reputation\", \"tokens\"].forEach(name => {\n        if (colNames.findIndex(column => column === name) === -1) {\n          reject(new Error(`Missing '${name}' column.`));\n          return;\n        }\n      });\n\n      rows.forEach(async (row: any, index: number) => {\n        // Create the member\n        const member = new MemberForm(this._getDAOTokenSymbol);\n        member.$.address.value = row.address.replace(/\\s/g, \"\");\n        member.$.reputation.value = row.reputation.replace(/\\s/g, \"\");\n        member.$.tokens.value = row.tokens.replace(/\\s/g, \"\");\n\n        // Validate the member\n        const memberValidate = await member.validate();\n        if (memberValidate.hasError) {\n          reject(\n            new Error(`Invalid member on row ${index}. Error: ${member.error}`)\n          );\n          return;\n        }\n\n        // Add the member to ourselves\n        this.$.push(member);\n\n        // Validate the collection\n        await this.validate();\n        if (this.hasError) {\n          reject(\n            new Error(\n              `Member on row ${index} is invalid within the collection. Error: ${this.error}`\n            )\n          );\n          return;\n        }\n\n        if (index === rows.length - 1) {\n          resolve();\n        }\n      });\n    };\n\n    await new Promise((resolve, reject) => {\n      csvParse(\n        csv as string | Buffer,\n        { columns: true },\n        parseCSV(resolve, reject)\n      );\n    });\n  }\n\n  public toCSV(): Promise<string> {\n    const csvData = [\n      [\"address\", \"reputation\", \"tokens\"],\n      ...this.$.map(member => [\n        member.$.address.value,\n        member.$.reputation.value,\n        member.$.tokens.value\n      ])\n    ];\n\n    return new Promise((resolve, reject) => {\n      csvStringify(csvData, (err, output) => {\n        if (output === undefined) {\n          reject(new Error(\"CSV Stringify result should always be defined.\"));\n        } else {\n          resolve(output);\n        }\n      });\n    });\n  }\n}\n","import { ValidatableMapOrArray } from \"formstate\";\nimport { Form } from \"lib/forms/Form\";\nimport {\n  AnyField,\n  requireElement,\n  GenericSchemeForm,\n  ContributionRewardForm,\n  SchemeRegistrarForm,\n  GenesisProtocolForm\n} from \"lib/forms\";\nimport {\n  Scheme,\n  GenericScheme,\n  ContributionReward,\n  SchemeRegistrar,\n  SchemeType\n} from \"lib/state\";\n\nexport type AnySchemeForm =\n  | GenericSchemeForm\n  | ContributionRewardForm\n  | SchemeRegistrarForm;\n\nexport abstract class SchemeForm<\n  StateType extends Scheme,\n  T extends ValidatableMapOrArray & { votingMachine: GenesisProtocolForm }\n> extends Form<StateType, T> {\n  public abstract getParams(): AnyField[];\n\n  private _type: SchemeType;\n\n  get type() {\n    return this._type;\n  }\n\n  constructor(type: SchemeType, $: T) {\n    super($);\n    this._type = type;\n  }\n}\n\nexport class SchemesForm extends Form<Scheme[], AnySchemeForm[]> {\n  constructor(form?: SchemesForm) {\n    super(form ? form.$ : ([] as AnySchemeForm[]));\n\n    this.validators(requireElement(\"Scheme\"));\n  }\n\n  public toState(): Scheme[] {\n    return this.$.map(\n      (schemeForm: AnySchemeForm): Scheme => schemeForm.toState()\n    );\n  }\n\n  public fromState(state: Scheme[]) {\n    this.$ = state.map(scheme => {\n      let schemeForm: AnySchemeForm;\n\n      switch (scheme.type) {\n        case SchemeType.ContributionReward:\n          schemeForm = new ContributionRewardForm();\n          schemeForm.fromState(scheme as ContributionReward);\n          break;\n        case SchemeType.SchemeRegistrar:\n          schemeForm = new SchemeRegistrarForm();\n          schemeForm.fromState(scheme as SchemeRegistrar);\n          break;\n        case SchemeType.GenericScheme:\n          schemeForm = new GenericSchemeForm();\n          schemeForm.fromState(scheme as GenericScheme);\n          break;\n        default:\n          throw Error(`Unimplemented SchemeType ${SchemeType[scheme.type]}`);\n      }\n\n      return schemeForm;\n    });\n  }\n}\n","import { SchemeForm } from \"lib/forms/dao/SchemeForm\";\nimport { AnyField, GenesisProtocolForm } from \"lib/forms\";\nimport {\n  SchemeType,\n  ContributionReward,\n  GenesisProtocol,\n  GenesisProtocolPreset\n} from \"lib/state\";\n\nexport class ContributionRewardForm extends SchemeForm<\n  ContributionReward,\n  {\n    votingMachine: GenesisProtocolForm;\n  }\n> {\n  constructor(form?: ContributionRewardForm) {\n    super(SchemeType.ContributionReward, {\n      votingMachine: form\n        ? form.$.votingMachine\n        : new GenesisProtocolForm({ preset: GenesisProtocolPreset.Normal })\n    });\n\n    this.setDisplayName(\"Contribution Reward\");\n    this.setDescription(\n      \"Contributors can propose rewards for themselves and others. These rewards can be tokens, reputation, or a combination.\"\n    );\n  }\n\n  public toState(): ContributionReward {\n    return new ContributionReward(this.$.votingMachine.toState());\n  }\n\n  public fromState(state: ContributionReward) {\n    this.$.votingMachine.fromState(state.votingMachine as GenesisProtocol);\n  }\n\n  public getParams(): AnyField[] {\n    return [];\n  }\n}\n","import { SchemeForm } from \"lib/forms/dao/SchemeForm\";\nimport {\n  AnyField,\n  AddressField,\n  GenesisProtocolForm,\n  requiredText,\n  validAddress,\n  nonZeroAddress\n} from \"lib/forms\";\nimport {\n  SchemeType,\n  GenericScheme,\n  GenesisProtocol,\n  GenesisProtocolPreset\n} from \"lib/state\";\n\n// TODO: support custom permissions\n// TODO: support custom addresses / versions?\nexport class GenericSchemeForm extends SchemeForm<\n  GenericScheme,\n  {\n    votingMachine: GenesisProtocolForm;\n    contractToCall: AddressField;\n  }\n> {\n  constructor(form?: GenericSchemeForm) {\n    super(SchemeType.GenericScheme, {\n      votingMachine: form\n        ? form.$.votingMachine\n        : new GenesisProtocolForm({ preset: GenesisProtocolPreset.Normal }),\n\n      contractToCall: new AddressField(\n        form\n          ? form.$.contractToCall.value\n          : \"0x0000000000000000000000000000000000000000\"\n      )\n        .validators(requiredText, validAddress, nonZeroAddress)\n        .setDisplayName(\"Contract Address\")\n        .setDescription(\"Address of the contract to call\")\n    });\n\n    this.setDisplayName(\"Generic Scheme\");\n    this.setDescription(\n      \"A scheme for proposing and executing calls to an arbitrary function on a specific contract on behalf of the organization avatar.\"\n    );\n  }\n\n  public toState(): GenericScheme {\n    return new GenericScheme(\n      this.$.contractToCall.value,\n      this.$.votingMachine.toState()\n    );\n  }\n\n  public fromState(state: GenericScheme) {\n    this.$.contractToCall.value = state.contractToCall;\n    // TODO: support multiple voting machine types\n    this.$.votingMachine.fromState(state.votingMachine as GenesisProtocol);\n  }\n\n  public getParams(): AnyField[] {\n    return [this.$.contractToCall];\n  }\n}\n","import { SchemeForm } from \"lib/forms/dao/SchemeForm\";\nimport { AnyField, GenesisProtocolForm } from \"lib/forms\";\nimport {\n  SchemeType,\n  SchemeRegistrar,\n  GenesisProtocol,\n  GenesisProtocolPreset\n} from \"lib/state\";\n\nexport class SchemeRegistrarForm extends SchemeForm<\n  SchemeRegistrar,\n  {\n    votingMachine: GenesisProtocolForm;\n  }\n> {\n  constructor(form?: SchemeRegistrarForm) {\n    super(SchemeType.SchemeRegistrar, {\n      votingMachine: form\n        ? form.$.votingMachine\n        : new GenesisProtocolForm({ preset: GenesisProtocolPreset.Critical })\n    });\n\n    this.setDisplayName(\"Scheme Registrar\");\n    this.setDescription(\n      \"Manages post-creation adding/modifying and removing of schemes. Schemes add functionality to the DAO.\"\n    );\n  }\n\n  public toState(): SchemeRegistrar {\n    return new SchemeRegistrar(this.$.votingMachine.toState());\n  }\n\n  public fromState(state: SchemeRegistrar) {\n    // TODO: support multiple voting machine types\n    this.$.votingMachine.fromState(state.votingMachine as GenesisProtocol);\n  }\n\n  public getParams(): AnyField[] {\n    return [];\n  }\n}\n","import { Form } from \"lib/forms/Form\";\nimport {\n  StringField,\n  TokenField,\n  DateTimeField,\n  DurationField,\n  AddressField,\n  PercentageField,\n  requiredText,\n  validAddress,\n  validNumber,\n  validPercentage,\n  greaterThan,\n  lessThanOrEqual,\n  greaterThanOrEqual,\n  futureDate\n} from \"lib/forms\";\nimport { GenesisProtocol } from \"lib/state\";\nimport { GenesisProtocolPreset } from \"lib/dependency/arc\";\n\nexport interface GenesisProtocolFormOpts {\n  form?: GenesisProtocolForm;\n  preset?: GenesisProtocolPreset;\n}\n\nexport class GenesisProtocolForm extends Form<\n  GenesisProtocol,\n  {\n    queuedVotePeriodLimit: DurationField;\n    preBoostedVotePeriodLimit: DurationField;\n    boostedVotePeriodLimit: DurationField;\n    quietEndingPeriod: DurationField;\n    queuedVoteRequiredPercentage: PercentageField;\n    minimumDaoBounty: TokenField;\n    daoBountyConst: StringField;\n    thresholdConst: StringField;\n    votersReputationLossRatio: PercentageField;\n    proposingRepReward: TokenField;\n    activationTime: DateTimeField;\n    voteOnBehalf: AddressField;\n  }\n> {\n  private _preset?: GenesisProtocolPreset;\n\n  public get preset(): GenesisProtocolPreset | undefined {\n    return this._preset;\n  }\n\n  public set preset(value: GenesisProtocolPreset | undefined) {\n    this._preset = value;\n\n    if (value) {\n      this.fromState(\n        new GenesisProtocol({\n          preset: value\n        })\n      );\n    }\n  }\n\n  constructor(opts: GenesisProtocolFormOpts) {\n    const form = opts.form;\n    const preset = opts.preset;\n\n    super({\n      queuedVotePeriodLimit: new DurationField(\n        form ? form.$.queuedVotePeriodLimit.value : \"00:00:00:00\"\n      )\n        .setDisplayName(\"Queued Vote Period Limit\")\n        .setDescription(\n          \"The length of time that voting is open for non-boosted proposals.\"\n        )\n        .setStory(\n          \"All proposals start out in the regular queue, where they require an absolute majority of support to pass or to fail. This parameter controls how long the DAO has to vote on a non-boosted proposal, so the longer it is, the more votes a given proposal is likely to accrue during its voting period. A longer voting period, however, also means the DAO will process proposals more slowly.\"\n        ),\n\n      preBoostedVotePeriodLimit: new DurationField(\n        form ? form.$.preBoostedVotePeriodLimit.value : \"00:00:00:00\"\n      )\n        .setDisplayName(\"Pre-Boosted Vote Period Limit\")\n        .setDescription(\n          \"The length of time that a proposal must maintain a confidence score higher than the boosting threshold to become eligible for boosting.\"\n        )\n        .setStory(\n          \"If a proposal has received enough stake predicting its success to become boosted, it first has to go through this pending period, to ensure there’s a chance for predictors to downstake it. This improves the staking/boosting system’s prediction accuracy and resilience to malicious actions.\"\n        ),\n\n      boostedVotePeriodLimit: new DurationField(\n        form ? form.$.boostedVotePeriodLimit.value : \"00:00:00:00\"\n      )\n        .setDisplayName(\"Boosted Vote Period Limit\")\n        .setDescription(\n          \"The length of time that voting is open for boosted proposals.\"\n        )\n        .setStory(\n          \"Proposals can only become boosted by gaining high confidence scores (lots of predictions that they will succeed), and so boosted proposals are “fast-tracked”: they require no minimum quorum of voters and have a shorter voting time period than non-boosted proposals.\"\n        ),\n\n      quietEndingPeriod: new DurationField(\n        form ? form.$.quietEndingPeriod.value : \"00:00:00:00\"\n      )\n        .setDisplayName(\"Quiet Ending Period\")\n        .setDescription(\n          \"The length of time a vote’s potential result needs to stay the same in order to be confirmed as the official result.\"\n        )\n        .setStory(\n          \"Holding votes until the last second of a voting period is not good for collective intelligence, and the quiet ending period helps get rid of it. If a vote switches from yes to no, or vice versa, near the end of the voting time (during it’s quiet ending period), extra voting time (another quiet ending period) is added.\"\n        ),\n\n      queuedVoteRequiredPercentage: new PercentageField(\n        form ? form.$.queuedVoteRequiredPercentage.value : 0\n      )\n        .validators(validPercentage)\n        .setDisplayName(\"Queued Vote Required Percentage\")\n        .setDescription(\n          \"The quorum required to decide a vote on a non-boosted proposal.\"\n        )\n        .setStory(\n          \"We think of non-boosted proposals as requiring more than 50% of a DAO’s voting power to decide, but this percentage is actually adjustable as well. Some DAOs may want to require a supermajority such as 60% and others, realizing how unlikely reaching 50% consensus is given participation rates, may want a lower quorum.\"\n        ),\n\n      minimumDaoBounty: new TokenField(\n        \"GEN\",\n        form ? form.$.minimumDaoBounty.value : \"0\"\n      )\n        .validators(requiredText, validNumber, greaterThanOrEqual(0))\n        .setDisplayName(\"Minimum DAO Bounty\")\n        .setDescription(\n          \"The minimum amount of GEN a DAO will stake when automatically downstaking each proposal.\"\n        )\n        .setStory(\n          \"The DAO will automatically downstake every proposal, in order to properly set up the staking system, and this parameter sets the minimum size for that downstake. A higher minimum means the DAO is more heavily subsidizing staking.\"\n        ),\n\n      daoBountyConst: new StringField(form ? form.$.daoBountyConst.value : \"1\")\n        .validators(requiredText, validNumber, greaterThan(0))\n        .setDisplayName(\"DAO Bounty Const\")\n        .setDescription(\n          \"This is multiplied by the average downstake on boosted proposals to calculate how large the DAO’s automatic downstake should be.\"\n        )\n        .setStory(\n          \"A size coefficient of 1 will mean the DAO automatically downstakes new proposal with a downstake as large as the average downstake on boosted proposals (unless that would be smaller than the minimum DAOstake parameter!).\"\n        ),\n\n      thresholdConst: new StringField(\n        form ? form.$.thresholdConst.value : \"1200\"\n      )\n        .validators(\n          requiredText,\n          validNumber,\n          greaterThan(1000),\n          lessThanOrEqual(16000)\n        )\n        .setDisplayName(\"Threshold Const\")\n        .setDescription(\n          \"Controls how quickly the required confidence score for boosting goes up as the number of currently boosted proposals rises. threshold = thresholdConst ** (numberOfBoostedProposals).\"\n        )\n        .setStory(\n          \"The boosting confidence score is this parameter raised to a power equal to the number of boosted proposals. Because the threshold goes up exponentially, this parameter sets a “soft cap” on the number of boosted proposals while still allowing the number of boosted proposals to scale with the size of the DAO.\"\n        ),\n\n      votersReputationLossRatio: new PercentageField(\n        form ? form.$.votersReputationLossRatio.value : 0\n      )\n        .validators(validPercentage)\n        .setDisplayName(\"Voters Reputation Loss Ratio\")\n        .setDescription(\n          \"The percentage of a voter’s voting power they stand to lose if they vote against the DAO’s eventual decision on a non-boosted proposal.\"\n        )\n        .setStory(\n          \"This loss / gain only applies to voting on non-boosted proposals. Voters who vote with the DAO’s eventual majority are rewarded with the voting power lost by incorrect voters. This has the effect of encouraging early votes to reflect the DAO’s perceived collective opinion, making the DAO more predictable and reliable overall. The larger this parameter is, the stronger the effect is.\"\n        ),\n\n      proposingRepReward: new TokenField(\n        \"REP\",\n        form ? form.$.proposingRepReward.value : \"0\"\n      )\n        .validators(requiredText, validNumber, greaterThan(0))\n        .setDisplayName(\"Proposing Rep Reward\")\n        .setDescription(\n          \"The amount of voting power given out as a reward for submitting a proposal that the DAO passes.\"\n        )\n        .setStory(\n          \"Each DAO has its own model of the ideal group of members to achieve its goals. Many of these models may include the idea that anyone who submits good ideas to the DAO belongs in that member group, and this parameter controls how much voting power those submitters are granted.\"\n        ),\n\n      activationTime: new DateTimeField(\n        form ? form.$.activationTime.value : undefined\n      )\n        .validators(futureDate)\n        .setDisplayName(\"Locking / Activation Time\")\n        .setDescription(\n          \"The point (represented in Unix time) in time when proposing and voting are activated.\"\n        )\n        .setStory(\n          \"Some DAOs may want to build in some set up time before governance begins: a staking period, a fund raising period, etc. This parameter sets that time.\"\n        ),\n\n      voteOnBehalf: new AddressField(\n        form\n          ? form.$.voteOnBehalf.value\n          : \"0x0000000000000000000000000000000000000000\"\n      )\n        .validators(requiredText, validAddress)\n        .setDisplayName(\"Vote On Behalf\")\n        .setDescription(\n          \"If set, only this address can call the vote function in the voting machine. This address would serve as a proxy voting module, and could contain additional functionality such as delegate based voting.\"\n        )\n    });\n\n    this.setDisplayName(\"Genesis Protocol\");\n\n    if (form && preset) {\n      throw Error(\n        \"Cannot construct a GenesisProtocolForm with both a form and a preset. Please supply only one.\"\n      );\n    }\n\n    if (preset) {\n      this.preset = preset;\n    } else if (form) {\n      this._preset = form.preset;\n    } else {\n      this.preset = GenesisProtocolPreset.Normal;\n    }\n  }\n\n  public toState(): GenesisProtocol {\n    if (this.preset) {\n      return new GenesisProtocol({ preset: this.preset });\n    } else {\n      return new GenesisProtocol({\n        config: {\n          queuedVoteRequiredPercentage: Number(\n            this.$.queuedVoteRequiredPercentage.value\n          ),\n          queuedVotePeriodLimit: this.$.queuedVotePeriodLimit.toSeconds(),\n          thresholdConst: Number(this.$.thresholdConst.value),\n          proposingRepReward: Number(this.$.proposingRepReward.value),\n          minimumDaoBounty: Number(this.$.minimumDaoBounty.value),\n          boostedVotePeriodLimit: this.$.boostedVotePeriodLimit.toSeconds(),\n          daoBountyConst: Number(this.$.daoBountyConst.value),\n          // TODO: future only is a hack for the editor, it won't work\n          // if we're viewing past data froma already deployed DAO...\n          activationTime: this.$.activationTime.getunixTime(),\n          preBoostedVotePeriodLimit: this.$.preBoostedVotePeriodLimit.toSeconds(),\n          quietEndingPeriod: this.$.quietEndingPeriod.toSeconds(),\n          voteOnBehalf: this.$.voteOnBehalf.value,\n          votersReputationLossRatio: this.$.votersReputationLossRatio.value\n        }\n      });\n    }\n  }\n\n  public fromState(state: GenesisProtocol) {\n    this._preset = state.preset;\n\n    const config = state.config;\n    this.$.queuedVoteRequiredPercentage.value =\n      config.queuedVoteRequiredPercentage;\n    this.$.queuedVotePeriodLimit.fromSeconds(config.queuedVotePeriodLimit);\n    this.$.thresholdConst.value = config.thresholdConst.toString();\n    this.$.proposingRepReward.value = config.proposingRepReward.toString();\n    this.$.minimumDaoBounty.value = config.minimumDaoBounty.toString();\n    this.$.boostedVotePeriodLimit.fromSeconds(config.boostedVotePeriodLimit);\n    this.$.daoBountyConst.value = config.daoBountyConst.toString();\n    this.$.activationTime.fromUnixTime(config.activationTime);\n    this.$.preBoostedVotePeriodLimit.fromSeconds(\n      config.preBoostedVotePeriodLimit\n    );\n    this.$.quietEndingPeriod.fromSeconds(config.quietEndingPeriod);\n    this.$.voteOnBehalf.value = config.voteOnBehalf;\n    this.$.votersReputationLossRatio.value = config.votersReputationLossRatio;\n  }\n}\n","export enum LogType {\n  Info,\n  Error,\n  TransactionResult,\n  UserApproval,\n  MigrationAborted\n}\n\nexport interface LogLine {\n  type: LogType;\n  toString: () => string;\n}\n\nexport class LogInfo implements LogLine {\n  public type = LogType.Info;\n  constructor(public info: string) {}\n\n  public toString() {\n    return this.info;\n  }\n}\n\nexport class LogError implements LogLine {\n  public type = LogType.Error;\n  constructor(public error: string) {}\n\n  public toString() {\n    return `${this.error}`;\n  }\n}\n\nexport class LogTransactionResult implements LogLine {\n  public type = LogType.TransactionResult;\n  constructor(\n    public msg: string,\n    public txHash: string,\n    public txCost: number\n  ) {}\n\n  public toString() {\n    return `${this.msg} ${this.txHash} ${this.txCost} ETH`;\n  }\n}\n\nexport class LogUserApproval implements LogLine {\n  public type = LogType.UserApproval;\n  public response?: boolean;\n  constructor(\n    public question: string,\n    public onResponse: (resp: boolean) => void\n  ) {}\n\n  public toString() {\n    return `${this.question} response: ${this.response}`;\n  }\n}\n\nexport class LogMigrationAborted implements LogLine {\n  public type = LogType.MigrationAborted;\n  constructor(public error: Error) {}\n\n  public toString() {\n    return `${this.error}`;\n  }\n}\n\nexport type AnyLogLine =\n  | LogInfo\n  | LogError\n  | LogTransactionResult\n  | LogUserApproval\n  | LogMigrationAborted;\n","import { Field, FieldType } from \"lib/forms\";\n\n// TODO: add standard verifiers for known types\nexport class AddressField extends Field<string, AddressField> {\n  constructor(init: string) {\n    super(init, FieldType.Address);\n  }\n}\n","import { Field, FieldType } from \"lib/forms\";\n\nexport class DateTimeField extends Field<Date | undefined, DateTimeField> {\n  constructor(init?: Date) {\n    super(init, FieldType.DateTime);\n  }\n\n  public getunixTime(): number {\n    if (this.value === undefined) {\n      return 0;\n    }\n\n    // div by 1000 to convert to seconds\n    return this.value.getTime() / 1000;\n  }\n\n  public fromUnixTime(unix: number): void {\n    if (unix === 0) {\n      // now\n      this.value = undefined;\n    } else {\n      // mul by 1000 to convert to milliseconds\n      this.value = new Date(unix * 1000);\n    }\n  }\n}\n","import { Field, FieldType, validDuration, positiveDuration } from \"lib/forms\";\n\n// TODO: enforce formatting\n// Format: DD:hh:mm:ss\nexport class DurationField extends Field<string, DurationField> {\n  get days(): number {\n    const parts = this.value.split(\":\");\n    return Number(parts[0]);\n  }\n\n  get hours(): number {\n    const parts = this.value.split(\":\");\n    return Number(parts[1]);\n  }\n\n  get minutes(): number {\n    const parts = this.value.split(\":\");\n    return Number(parts[2]);\n  }\n\n  get seconds(): number {\n    const parts = this.value.split(\":\");\n    return Number(parts[3]);\n  }\n\n  constructor(init: string) {\n    super(init, FieldType.Duration);\n    this.validators(validDuration, positiveDuration);\n  }\n\n  // TODO: put these constants somewhere (86400, 3600, etc)\n  public toSeconds(): number {\n    const parts = this.value.split(\":\");\n    const days = Number(parts[0]);\n    const hours = Number(parts[1]);\n    const minutes = Number(parts[2]);\n    const seconds = Number(parts[3]);\n\n    return days * 86400 + hours * 3600 + minutes * 60 + seconds;\n  }\n\n  public fromSeconds(seconds: number): void {\n    const days = Math.trunc(seconds / 86400);\n    seconds -= days * 86400;\n    const hours = Math.trunc(seconds / 3600);\n    seconds -= hours * 3600;\n    const minutes = Math.trunc(seconds / 60);\n    seconds -= minutes * 60;\n    seconds = Math.trunc(seconds);\n    this.value = `${days}:${hours}:${minutes}:${seconds}`;\n  }\n}\n","import { Field, FieldType, validPercentage } from \"lib/forms\";\n\nexport class PercentageField extends Field<number, PercentageField> {\n  constructor(init: number) {\n    super(init, FieldType.Percentage);\n    this.validators(validPercentage);\n  }\n}\n","import { Field, FieldType } from \"lib/forms\";\n\nexport class StringField extends Field<string, StringField> {\n  constructor(init: string) {\n    super(init, FieldType.String);\n  }\n}\n","import { Field, FieldType } from \"lib/forms\";\n\nexport class TokenField extends Field<string, TokenField> {\n  private _symbol: string | (() => string);\n\n  constructor(symbol: string | (() => string), init: string) {\n    super(init, FieldType.Token);\n    this._symbol = symbol;\n  }\n\n  get symbol(): string {\n    if (typeof this._symbol === \"string\") {\n      return this._symbol as string;\n    } else {\n      return this._symbol();\n    }\n  }\n}\n","import { Validator } from \"formstate\";\nimport { TypeValidation, TypeConversion } from \"lib/dependency/web3\";\n\ntype StringOrNull = string | null | undefined;\n\nexport const requiredText: Validator<StringOrNull> = value => {\n  const error = \"This is required.\";\n\n  if (value == null || value.trim().length === 0) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validAddress: Validator<string> = value => {\n  const error = \"Please enter a valid address.\";\n  value = value.trim();\n\n  if (!TypeValidation.isAddress(value)) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validTokenSymbol: Validator<string> = value => {\n  const error =\n    \"Token names must be all capitol letters and less than 4 characters.\";\n  value = value.trim();\n\n  if (value.length > 4 || !/^[A-Z]+$/.test(value)) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validBigNumber: Validator<string> = value => {\n  const error = \"Please enter a valid whole number.\";\n  value = value.trim();\n\n  try {\n    TypeConversion.toBN(value);\n  } catch (e) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validNumber: Validator<string> = value => {\n  const error = \"Please enter a valid number.\";\n  value = value.trim();\n\n  if (isNaN(Number(value))) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validName: Validator<string> = value => {\n  const error = \"Names must be less than 70 characters.\";\n  value = value.trim();\n\n  if (value.length > 70) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validPercentage: Validator<number> = value => {\n  const error = \"Percentages must be between 0 and 100.\";\n\n  if (value > 100 || value < 0) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const validDuration: Validator<string> = value => {\n  const error = \"Duration format is incorrect. Please use DD:hh:mm:ss\";\n  value = value.trim();\n  const parts = value.split(\":\");\n\n  if (parts.length !== 4) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const positiveDuration: Validator<string> = value => {\n  let error = null;\n  value = value.trim();\n  const parts = value.split(\":\");\n\n  parts.forEach((part, index) => {\n    if (Number(part) < 0) {\n      switch (index) {\n        case 0:\n          error = \"Days cannot be negative.\";\n          return;\n        case 1:\n          error = \"Hours cannot be negative.\";\n          return;\n        case 2:\n          error = \"Minutes cannot be negative.\";\n          return;\n        case 3:\n          error = \"Seconds cannot be negative.\";\n          return;\n        default:\n          throw Error(\"This should never happen.\");\n      }\n    }\n  });\n\n  return error;\n};\n\nexport const futureDate: Validator<Date | undefined> = value => {\n  let error = \"Date must be in the future.\";\n  const currentTime = new Date().getTime();\n\n  if (value && value.getTime() < currentTime) {\n    return error;\n  }\n\n  return null;\n};\n\nexport const greaterThan = (bound: number) => (value: string) => {\n  const error = `Number must be greater than ${bound}.`;\n  value = value.trim();\n\n  if (validNumber(value) === null && Number(value) > bound) {\n    return null;\n  }\n\n  return error;\n};\n\nexport const greaterThanOrEqual = (bound: number) => (value: string) => {\n  const error = `Number must be greater than or equal to ${bound}.`;\n  value = value.trim();\n\n  if (validNumber(value) === null && Number(value) >= bound) {\n    return null;\n  }\n\n  return error;\n};\n\nexport const lessThanOrEqual = (bound: number) => (value: string) => {\n  const error = `Number must be less than or equal to ${bound}.`;\n  value = value.trim();\n\n  if (validNumber(value) === null && Number(value) <= bound) {\n    return null;\n  }\n\n  return error;\n};\n\nexport const nonZeroAddress: Validator<string> = value => {\n  const error = \"Address must not be zero.\";\n  value = value.trim();\n\n  if (value === \"0x0000000000000000000000000000000000000000\") {\n    return error;\n  }\n\n  return null;\n};\n\nexport const requireElement = (elementName: string) => (array: any[]) =>\n  !array.length && `Please add a ${elementName}.`;\n\nexport const noDuplicates = (\n  evaluate: (a: any, b: any) => boolean,\n  toString: (value: any) => string\n) => (array: any[]) => {\n  for (let i = 0; i < array.length; ++i) {\n    const a = array[i];\n\n    for (let k = 0; k < array.length; ++k) {\n      if (k === i) continue;\n      const b = array[k];\n\n      if (evaluate(a, b)) {\n        return `Duplicate entry detected: ${toString(a)}`;\n      }\n    }\n  }\n};\n","import * as React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport Blockies from \"react-blockies\";\n\nexport type Props = {\n  address: string;\n};\n\nconst EthAddressAvatar: React.SFC<Props> = ({ address }) => (\n  <IconButton\n    onClick={() => window.open(`https://etherscan.io/address/${address}`)}\n    style={{\n      padding: 0\n    }}\n    tabIndex={-1}\n  >\n    <Blockies seed={address} />\n  </IconButton>\n);\n\nexport default EthAddressAvatar;\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  FormControl,\n  FormHelperText,\n  TextField,\n  Typography,\n  IconButton,\n  Popover,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  InputAdornment,\n  Grid,\n  Slider,\n  Input\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/InfoTwoTone\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  AnyField,\n  FieldType,\n  StringField,\n  TokenField,\n  DurationField,\n  DateTimeField,\n  PercentageField,\n  AddressField\n} from \"lib/forms\";\nimport EthAddressAvatar from \"components/common/EthAddressAvatar\";\n\nexport interface Props {\n  field: AnyField;\n  editable?: boolean;\n}\n\nclass FormField extends React.Component<Props> {\n  render() {\n    const { field, editable } = this.props;\n\n    return (\n      <PopupState variant=\"popover\" popupId=\"popup-popover\">\n        {(popupState: any) => {\n          let FieldView;\n\n          switch (field.type) {\n            case FieldType.String:\n              FieldView = StringFieldView;\n              break;\n            case FieldType.Token:\n              FieldView = TokenFieldView;\n              break;\n            case FieldType.DateTime:\n              FieldView = DateTimeFieldView;\n              break;\n            case FieldType.Duration:\n              FieldView = DurationFieldView;\n              break;\n            case FieldType.Address:\n              FieldView = AddressFieldView;\n              break;\n            case FieldType.Percentage:\n              FieldView = PercentageFieldView;\n              break;\n            default:\n              throw Error(\n                `Field type \"${FieldType[field.type]}\" unimplemented.`\n              );\n          }\n\n          return (\n            <>\n              <FormControl fullWidth>\n                <FieldView\n                  field={field as any}\n                  popupState={popupState}\n                  editable={editable}\n                />\n              </FormControl>\n              <Popover\n                {...bindPopover(popupState)}\n                anchorReference=\"anchorPosition\"\n                anchorPosition={{ top: 100, left: 20 }}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\"\n                }}\n                transformOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\"\n                }}\n              >\n                {field.story === \"\" ? (\n                  <Typography style={{ maxWidth: 400, margin: 20 }}>\n                    <b>{field.displayName}:</b> {field.description}\n                  </Typography>\n                ) : (\n                  <ExpansionPanel style={{ maxWidth: 400 }}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                      <Typography>\n                        <b>{field.displayName}:</b> {field.description}\n                      </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                      <Typography>{field.story}</Typography>\n                    </ExpansionPanelDetails>\n                  </ExpansionPanel>\n                )}\n              </Popover>\n            </>\n          );\n        }}\n      </PopupState>\n    );\n  }\n}\n\nconst FieldInformation = (popupState: any, style?: any) => (\n  <IconButton\n    tabIndex={-1}\n    style={\n      style\n        ? style\n        : {\n            padding: 0,\n            marginTop: \"15px\",\n            marginLeft: \"0px\",\n            marginRight: \"5px\"\n          }\n    }\n    {...bindTrigger(popupState)}\n  >\n    <InfoIcon />\n  </IconButton>\n);\n\ninterface FieldProps<T> {\n  field: T;\n  popupState: any;\n  editable?: boolean;\n}\n\nconst FieldError = ({ field }: any) => (\n  <>\n    {field.hasError ? (\n      <FormHelperText\n        error={field.hasError}\n        style={{ marginBottom: 5, marginTop: 5 }}\n      >\n        {field.error}\n      </FormHelperText>\n    ) : (\n      <></>\n    )}\n  </>\n);\n\nconst StringFieldView = observer(\n  ({ field, popupState, editable }: FieldProps<StringField>) => (\n    <>\n      <TextField\n        fullWidth\n        variant={\"filled\"}\n        margin={\"dense\"}\n        label={field.displayName}\n        error={field.hasError}\n        value={field.value}\n        disabled={editable === undefined ? false : !editable}\n        onChange={e => field.onChange(e.target.value)}\n        onBlur={field.enableAutoValidationAndValidate}\n        InputProps={{\n          startAdornment: FieldInformation(popupState)\n        }}\n      />\n      <FieldError field={field} />\n    </>\n  )\n);\n\nconst TokenFieldView = observer(\n  ({ field, popupState, editable }: FieldProps<TokenField>) => (\n    <>\n      <TextField\n        fullWidth\n        variant={\"filled\"}\n        margin={\"dense\"}\n        label={field.displayName}\n        error={field.hasError}\n        value={field.value}\n        disabled={editable === undefined ? false : !editable}\n        onChange={e => field.onChange(e.target.value)}\n        onBlur={field.enableAutoValidationAndValidate}\n        InputProps={{\n          startAdornment: FieldInformation(popupState),\n          endAdornment: (\n            <InputAdornment position=\"end\">{field.symbol}</InputAdornment>\n          )\n        }}\n      />\n      <FieldError field={field} />\n    </>\n  )\n);\n\nconst DurationFieldView = observer(\n  ({ field, popupState, editable }: FieldProps<DurationField>) => {\n    const onChange = (event: any) => {\n      const { name, value } = event.target;\n      const duration: any = {\n        days: field.days,\n        hours: field.hours,\n        minutes: field.minutes\n      };\n      duration[name] = Number(value);\n      field.onChange(\n        `${duration.days}:${duration.hours}:${duration.minutes}:00`\n      );\n    };\n\n    const DurationPart = observer(\n      (props: { name: \"days\" | \"hours\" | \"minutes\" }) => (\n        <TextField\n          name={props.name}\n          label={props.name}\n          value={field[props.name]}\n          disabled={editable === undefined ? false : !editable}\n          onChange={onChange}\n          variant={\"outlined\"}\n          type={\"number\"}\n          margin={\"dense\"}\n          error={field.hasError}\n          inputProps={{\n            style: {\n              paddingTop: \"5px\",\n              paddingBottom: \"5px\"\n            }\n          }}\n          onBlur={field.enableAutoValidationAndValidate}\n        />\n      )\n    );\n\n    return (\n      <>\n        <TextField\n          disabled\n          label={field.displayName}\n          error={field.hasError}\n          variant={\"filled\"}\n          value={\" \"}\n          style={{\n            height: \"60px\",\n            marginTop: \"8px\"\n          }}\n          InputProps={{\n            startAdornment: FieldInformation(popupState, {\n              padding: 0,\n              marginTop: \"25px\",\n              marginLeft: \"0px\"\n            })\n          }}\n          // eslint-disable-next-line\n          inputProps={{\n            style: {\n              height: \"25px\"\n            }\n          }}\n        />\n        <Grid\n          container\n          justify={\"space-between\"}\n          style={{\n            marginTop: \"-39px\",\n            marginBottom: \"4px\"\n          }}\n        >\n          <Grid item>\n            <div style={{ width: \"25px\" }} />\n          </Grid>\n          <Grid item xs={3}>\n            <DurationPart name={\"days\"} />\n          </Grid>\n          <Grid item xs={3}>\n            <DurationPart name={\"hours\"} />\n          </Grid>\n          <Grid item xs={3}>\n            <DurationPart name={\"minutes\"} />\n          </Grid>\n          <Grid item>\n            <div style={{ width: \"10px\" }} />\n          </Grid>\n        </Grid>\n        <FieldError field={field} />\n      </>\n    );\n  }\n);\n\nconst DateTimeFieldView = observer(\n  ({ field, popupState, editable }: FieldProps<DateTimeField>) => (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDateTimePicker\n        label={field.displayName}\n        value={field.value === undefined ? null : field.value}\n        disabled={editable === undefined ? false : !editable}\n        onChange={date =>\n          date === null ? field.onChange(undefined) : field.onChange(date)\n        }\n        disablePast\n        clearable\n        format=\"MM/dd/yyyy HH:mm\"\n        variant={\"dialog\"}\n        inputVariant={\"filled\"}\n        ampm={false}\n        style={{\n          marginTop: \"5px\",\n          marginBottom: \"4px\"\n        }}\n        InputProps={{\n          startAdornment: FieldInformation(popupState)\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  )\n);\n\nconst PercentageFieldView = observer(\n  ({ field, popupState, editable }: FieldProps<PercentageField>) => {\n    const onSliderChange = (event: any, newValue: number | number[]) => {\n      if (typeof newValue === \"number\") {\n        field.onChange(newValue);\n      } else {\n        field.onChange(newValue[0]);\n      }\n    };\n\n    const onInputChange = (event: any) => {\n      const value = event.target.value;\n      field.onChange(value === \"\" ? 0 : Number(value));\n    };\n\n    return (\n      <>\n        <TextField\n          disabled\n          label={field.displayName}\n          error={field.hasError}\n          variant={\"filled\"}\n          value={\" \"}\n          style={{\n            height: \"60px\",\n            marginTop: \"8px\"\n          }}\n        />\n        <Grid\n          container\n          spacing={2}\n          alignItems={\"center\"}\n          style={{\n            marginTop: \"-50px\",\n            paddingRight: \"12px\",\n            paddingLeft: \"12px\"\n          }}\n        >\n          <Grid item>\n            {FieldInformation(popupState, {\n              padding: 0\n            })}\n          </Grid>\n          <Grid item xs>\n            <Slider\n              value={field.value}\n              onChange={onSliderChange}\n              onBlur={field.enableAutoValidationAndValidate}\n              disabled={editable === undefined ? false : !editable}\n              step={0.1}\n              style={{\n                marginTop: \"10px\"\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <Input\n              value={field.value}\n              margin={\"dense\"}\n              onChange={onInputChange}\n              onBlur={field.enableAutoValidationAndValidate}\n              inputProps={{\n                step: 0.1,\n                min: 0,\n                max: 100,\n                type: \"number\"\n              }}\n              disabled={editable === undefined ? false : !editable}\n            />\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n);\n\nconst AddressFieldView = observer(\n  ({ field, popupState, editable }: FieldProps<AddressField>) => (\n    <>\n      <TextField\n        fullWidth\n        variant={\"filled\"}\n        margin={\"dense\"}\n        label={field.displayName}\n        error={field.hasError}\n        value={field.value}\n        disabled={editable === undefined ? false : !editable}\n        onChange={e => field.onChange(e.target.value)}\n        onBlur={field.enableAutoValidationAndValidate}\n        InputProps={{\n          startAdornment: FieldInformation(popupState),\n          endAdornment: <EthAddressAvatar address={field.value} />\n        }}\n      />\n      <FieldError field={field} />\n    </>\n  )\n);\n\nexport default FormField;\n","import * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport FormField from \"components/common/FormField\";\nimport { DAOConfigForm } from \"lib/forms\";\n\ninterface Props {\n  form: DAOConfigForm;\n  editable: boolean;\n}\n\nexport default class DAOConfigEditor extends React.Component<Props> {\n  render() {\n    const { form, editable } = this.props;\n\n    return (\n      <>\n        <Grid item xs={12} md={7}>\n          <Grid item xs={12}>\n            <FormField field={form.$.daoName} editable={editable} />\n          </Grid>\n          <Grid item xs={12}>\n            <FormField field={form.$.tokenName} editable={editable} />\n          </Grid>\n          <Grid item xs={12}>\n            <FormField field={form.$.tokenSymbol} editable={editable} />\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Grid,\n  Fab,\n  FormControl,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button\n} from \"@material-ui/core\";\nimport ImportIcon from \"@material-ui/icons/Unarchive\";\nimport { DAOForm } from \"lib/forms\";\n\ninterface ImportError {\n  file: string;\n  error: string;\n}\n\ninterface Props {\n  form: DAOForm;\n  onImport: () => void;\n}\n\ninterface State {\n  open: boolean;\n  error: ImportError | undefined;\n}\n\nconst initState: State = {\n  open: false,\n  error: undefined\n};\n\nexport default class MigrationParamsImport extends React.Component<\n  Props,\n  State\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...initState\n    };\n  }\n\n  render() {\n    const { form, onImport } = this.props;\n    const { open, error } = this.state;\n\n    const onOpen = () => {\n      this.setState({\n        ...initState,\n        open: true\n      });\n    };\n\n    const onClose = () =>\n      this.setState({\n        ...initState,\n        open: false\n      });\n\n    const onError = (file: string, error: string) =>\n      this.setState({\n        ...this.state,\n        error: { file, error }\n      });\n\n    const onFilePicked = async (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.files === null) {\n        return;\n      }\n\n      const files = Array.from(event.target.files);\n\n      if (files.length === 0) {\n        return;\n      }\n\n      const file: File = files[0];\n\n      try {\n        await form.fromMigrationParamsFile(file);\n        await form.validate();\n      } catch (e) {\n        onError(file.name, e.message);\n        return;\n      }\n\n      onClose();\n      onImport();\n    };\n\n    const ImportInfo = () => (\n      <DialogTitle id=\"simple-dialog-title\">\n        Import an existing `dao-params.json` file.\n      </DialogTitle>\n    );\n\n    const ImportErrors = (props: { error: ImportError }) => (\n      <DialogContent>\n        <strong>We encountered an issue during the import process:</strong>\n        <br />\n        <div>\n          {props.error.file}: {props.error.error}\n        </div>\n      </DialogContent>\n    );\n\n    const ImportButton = () => (\n      <FormControl>\n        <Button color=\"primary\" variant=\"contained\" component=\"label\">\n          Upload File\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".json\"\n            multiple={false}\n            onChange={onFilePicked}\n            style={{ display: \"none\" }}\n          />\n        </Button>\n      </FormControl>\n    );\n\n    return (\n      <>\n        <Grid item xs={12} md={7}>\n          <Fab size={\"small\"} color={\"primary\"} onClick={onOpen}>\n            <ImportIcon />\n          </Fab>\n        </Grid>\n        <Dialog onClose={onClose} open={open}>\n          {error ? <ImportErrors error={error} /> : <ImportInfo />}\n          <ImportButton />\n        </Dialog>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  Grid,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core\";\nimport DAOConfigEditor from \"components/common/dao/DAOConfigEditor\";\nimport MigrationParamsImport from \"components/common/dao/MigrationParamsImport\";\nimport { DAOConfigForm, DAOForm } from \"lib/forms\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  form: DAOConfigForm;\n  daoForm: DAOForm;\n  toReviewStep: () => void;\n}\n\nclass NamingStep extends React.Component<Props> {\n  render() {\n    const { classes, form, daoForm, toReviewStep } = this.props;\n\n    return (\n      <Card>\n        <form>\n          <CardContent>\n            <Typography variant=\"h4\" gutterBottom>\n              Name the DAO\n            </Typography>\n            <Grid container spacing={10}>\n              <Grid item xs={12} md={5}>\n                <Typography className={classes.guideText} variant=\"body2\">\n                  Welcome!\n                  <br />\n                  You're about to start the process of creating a DAO\n                  (Decentralized Autonomous Organization).\n                  <br />\n                  <br />\n                  Let's start by giving a name to the DAO and its token.\n                  <br />\n                </Typography>\n              </Grid>\n              <DAOConfigEditor form={form} editable={true} />\n              <MigrationParamsImport form={daoForm} onImport={toReviewStep} />\n            </Grid>\n          </CardContent>\n        </form>\n      </Card>\n    );\n  }\n}\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 50,\n      paddingBottom: 50,\n      margin: \"auto\"\n    }\n  });\n\nexport default withStyles(styles)(NamingStep);\n","import * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport FormField from \"components/common/FormField\";\nimport { MemberForm } from \"lib/forms\";\n\ninterface Props {\n  form: MemberForm;\n  editable: boolean;\n}\n\nexport default class MemberEditor extends React.Component<Props> {\n  render() {\n    const { form, editable } = this.props;\n\n    return (\n      <>\n        <Grid item sm={4} xs={8}>\n          <FormField field={form.$.address} editable={editable} />\n        </Grid>\n        <Grid item sm={3} xs={5}>\n          <FormField field={form.$.reputation} editable={editable} />\n        </Grid>\n        <Grid item sm={3} xs={5}>\n          <FormField field={form.$.tokens} editable={editable} />\n        </Grid>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  FormControl,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  ButtonGroup,\n  Grid\n} from \"@material-ui/core\";\nimport DownloadIcon from \"@material-ui/icons/Archive\";\nimport ImportIcon from \"@material-ui/icons/Unarchive\";\nimport { MembersForm } from \"lib/forms\";\nimport { saveAs } from \"file-saver\";\n\ninterface ImportError {\n  file: string;\n  error: string;\n}\n\ninterface Props {\n  form: MembersForm;\n}\n\ninterface State {\n  open: boolean;\n  error: ImportError | undefined;\n}\n\nconst initState: State = {\n  open: false,\n  error: undefined\n};\n\nexport default class MembersSaveLoad extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...initState\n    };\n  }\n\n  render() {\n    const { form } = this.props;\n    const { open, error } = this.state;\n\n    const onOpen = () =>\n      this.setState({\n        ...initState,\n        open: true\n      });\n\n    const onClose = () =>\n      this.setState({\n        ...initState,\n        open: false\n      });\n\n    const onError = (file: string, error: string) =>\n      this.setState({\n        ...this.state,\n        error: { file, error }\n      });\n\n    const onFilePicked = async (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.files === null) {\n        return;\n      }\n\n      const files = Array.from(event.target.files);\n      const formClone = new MembersForm(form.getDAOTokenSymbol);\n      formClone.$ = [...form.$];\n\n      for (const file of files) {\n        const importedMembers = new MembersForm(form.getDAOTokenSymbol);\n\n        try {\n          await importedMembers.fromCSV(file);\n        } catch (e) {\n          onError(file.name, e.message);\n          return;\n        }\n\n        // Try adding these members to the full list\n        formClone.$ = [...formClone.$, ...importedMembers.$];\n\n        await formClone.validate();\n        if (formClone.hasError && formClone.error) {\n          onError(file.name, formClone.error);\n          return;\n        }\n      }\n\n      form.$.splice(0, form.$.length);\n      form.$.push(...formClone.$);\n\n      onClose();\n    };\n\n    const onDownload = async () => {\n      saveAs(new File([await form.toCSV()], \"dao-members.csv\"));\n    };\n\n    const onDownloadTemplate = async () => {\n      const emptyForm = new MembersForm(form.getDAOTokenSymbol);\n      saveAs(new File([await emptyForm.toCSV()], \"dao-members.csv\"));\n    };\n\n    const ImportInfo = () => (\n      <DialogTitle id=\"simple-dialog-title\">\n        Make sure your CSV file has the following columns:\n        <Grid\n          container\n          direction={\"row\"}\n          justify={\"space-around\"}\n          alignItems={\"center\"}\n        >\n          <Grid item>\n            <ul>\n              <li>address</li>\n              <li>reputation</li>\n              <li>tokens</li>\n            </ul>\n          </Grid>\n          <Grid item>\n            Need a template?\n            <Grid container justify={\"center\"}>\n              <Button\n                onClick={onDownloadTemplate}\n                size={\"small\"}\n                color={\"primary\"}\n                variant={\"contained\"}\n              >\n                <DownloadIcon />\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogTitle>\n    );\n\n    const ImportErrors = (props: { error: ImportError }) => (\n      <DialogContent>\n        <strong>We encountered an issue during the import process:</strong>\n        <br />\n        <div>\n          {props.error.file}: {props.error.error}\n        </div>\n      </DialogContent>\n    );\n\n    const ImportButton = () => (\n      <FormControl>\n        <Button color=\"primary\" variant=\"contained\" component=\"label\">\n          Upload File\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\".csv\"\n            multiple={true}\n            onChange={onFilePicked}\n            style={{ display: \"none\" }}\n          />\n        </Button>\n      </FormControl>\n    );\n\n    return (\n      <ButtonGroup size={\"small\"} color={\"primary\"} variant={\"contained\"}>\n        <Button onClick={onDownload}>\n          <DownloadIcon />\n        </Button>\n        <Button onClick={onOpen}>\n          <ImportIcon />\n        </Button>\n        <Dialog onClose={onClose} open={open}>\n          {error ? <ImportErrors error={error} /> : <ImportInfo />}\n          <ImportButton />\n        </Dialog>\n      </ButtonGroup>\n    );\n  }\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { observable } from \"mobx\";\nimport {\n  WithStyles,\n  Theme,\n  createStyles,\n  withStyles,\n  Grid,\n  Fab,\n  Typography\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemIcon from \"@material-ui/icons/Remove\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport MemberEditor from \"./MemberEditor\";\nimport { MemberForm, MembersForm } from \"lib/forms\";\nimport MembersSaveLoad from \"./MembersSaveLoad\";\nimport { Member } from \"lib/state\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  form: MembersForm;\n  editable: boolean;\n  getDAOTokenSymbol: () => string;\n  maxScrollHeight?: string;\n}\n\n@observer\nclass MembersEditor extends React.Component<Props> {\n  @observable addError: string | null | undefined = undefined;\n  @observable newMemberForm = new MemberForm(this.props.getDAOTokenSymbol);\n  @observable selected: {\n    memberForm: MemberForm;\n    index: number;\n    backup: { [key in keyof Member]: string };\n  } = {\n    memberForm: new MemberForm(this.props.getDAOTokenSymbol),\n    index: -1,\n    backup: { address: \"\", reputation: \"\", tokens: \"\" }\n  };\n\n  handleKeyDown = (event: { key: string }) => {\n    if (event.key === \"Escape\") {\n      this.selected = {\n        memberForm: new MemberForm(this.props.getDAOTokenSymbol),\n        index: -1,\n        backup: { address: \"\", reputation: \"\", tokens: \"\" }\n      };\n      return false;\n    }\n    if (event.key === \"Enter\") {\n      return true;\n    }\n    return false;\n  };\n\n  render() {\n    const {\n      classes,\n      form,\n      editable,\n      getDAOTokenSymbol,\n      maxScrollHeight\n    } = this.props;\n    const newMemberForm = this.newMemberForm;\n    const selected = this.selected;\n    const handleKeyDown = this.handleKeyDown;\n\n    const resetSelected = () => {\n      selected.memberForm = new MemberForm(this.props.getDAOTokenSymbol);\n      selected.index = -1;\n      selected.backup = { address: \"\", reputation: \"\", tokens: \"\" };\n    };\n\n    //Adds a new memberForm to form\n    const onAdd = async () => {\n      // Check the new member for errors\n      const memberValidate = await newMemberForm.validate();\n      if (memberValidate.hasError) return;\n\n      // See if the new member can be added to the array\n      // without any errors\n      form.$.push(new MemberForm(getDAOTokenSymbol, newMemberForm));\n\n      const membersValidate = await form.validate();\n      if (membersValidate.hasError) {\n        this.addError = form.error;\n        form.$.pop();\n        return;\n      }\n\n      this.addError = undefined;\n      newMemberForm.reset();\n      this.forceUpdate();\n    };\n\n    const onRemove = (index: number) => {\n      resetSelected();\n      form.$.splice(index, 1);\n      this.forceUpdate();\n    };\n\n    //Validates edit and updates form\n    const onEdit = async (index: number) => {\n      // Check the edited member for errors\n      const memberValidate = await selected.memberForm.validate();\n      if (memberValidate.hasError) return;\n\n      // See if the edited member can be reinserted into the array\n      // without any errors\n      form.$[index].setValues(selected.memberForm.values);\n\n      const membersValidate = await form.validate();\n      if (membersValidate.hasError) {\n        this.addError = form.error;\n        form.$[index].setValues(selected.backup);\n        return;\n      }\n\n      this.addError = undefined;\n      resetSelected();\n      this.forceUpdate();\n    };\n\n    //Selects a memberForm and enables editing\n    const onSelect = async (index: number) => {\n      if (index === selected.index) {\n        await onEdit(index);\n        resetSelected();\n        return;\n      }\n      if (index > -1) await onEdit(selected.index);\n      selected.index = index;\n\n      //Create new memberform\n      selected.memberForm = new MemberForm(this.props.getDAOTokenSymbol);\n\n      //Set backup to revert to in case of errors\n      selected.backup = form.$[index].values;\n      selected.memberForm.setValues(selected.backup);\n    };\n\n    const editing = (\n      <>\n        <Grid>\n          <Typography variant=\"h6\">Members</Typography>\n          <MembersSaveLoad form={form} />\n        </Grid>\n        <Grid\n          container\n          key={\"new-member\"}\n          spacing={1}\n          justify={\"center\"}\n          alignItems={\"flex-start\"}\n          onKeyDown={e => handleKeyDown(e) && onAdd()}\n        >\n          <MemberEditor form={newMemberForm} editable={true} />\n          <Grid item className={classes.addButton}>\n            <Fab\n              size={\"small\"}\n              color={\"primary\"}\n              disabled={newMemberForm.hasError}\n              onClick={onAdd}\n            >\n              <AddIcon />\n            </Fab>\n          </Grid>\n        </Grid>\n\n        <Grid container justify={\"center\"}>\n          {this.addError && (\n            <Typography color={\"error\"}>{this.addError}</Typography>\n          )}\n        </Grid>\n      </>\n    );\n\n    const members = (\n      <Grid\n        container\n        style={\n          maxScrollHeight\n            ? {\n                maxHeight: maxScrollHeight,\n                overflowY: \"auto\",\n                scrollbarWidth: \"thin\"\n              }\n            : {}\n        }\n      >\n        {form.$.map((memberForm, index) => (\n          <Grid\n            container\n            spacing={1}\n            style={{\n              // Removes useless scrollbars caused by spacing={1}\n              margin: \"0\",\n              width: \"100%\"\n            }}\n            key={`member-${index}`}\n            justify={\"center\"}\n            alignItems={\"flex-start\"}\n            onKeyDown={e => handleKeyDown(e) && onEdit(index)}\n          >\n            {index !== selected.index ? (\n              <MemberEditor form={memberForm} editable={false} />\n            ) : (\n              <MemberEditor form={selected.memberForm} editable />\n            )}\n            {editable && (\n              <>\n                <Grid item className={classes.editButtons}>\n                  <Fab\n                    size={\"small\"}\n                    color={\"primary\"}\n                    onClick={() => onSelect(index)}\n                  >\n                    {selected.index === index ? (\n                      selected.memberForm.error ? (\n                        <ErrorIcon />\n                      ) : (\n                        <CheckIcon />\n                      )\n                    ) : (\n                      <EditIcon />\n                    )}\n                  </Fab>\n                </Grid>\n                <Grid item className={classes.editButtons}>\n                  <Fab\n                    size={\"small\"}\n                    color={\"primary\"}\n                    onClick={() => onRemove(index)}\n                  >\n                    <RemIcon />\n                  </Fab>\n                </Grid>\n              </>\n            )}\n          </Grid>\n        ))}\n      </Grid>\n    );\n\n    return (\n      <>\n        {editable && editing}\n        {members}\n      </>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    addButton: {\n      marginTop: \"12px\",\n      marginLeft: \"22px\",\n      paddingRight: \"34px !important\"\n    },\n    editButtons: {\n      marginTop: \"12px\"\n    }\n  });\n\nexport default withStyles(styles)(MembersEditor);\n","import * as React from \"react\";\nimport {\n  Chart,\n  PieSeries,\n  Tooltip\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation, EventTracker } from \"@devexpress/dx-react-chart\";\n\nexport interface PieChartConfig {\n  size: number;\n  dataKey: string;\n  nameKey: string;\n}\n\nexport interface Props {\n  data: any[];\n  config: PieChartConfig;\n}\n\ninterface State {\n  targetItem: any;\n}\n\nclass PieChart extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      targetItem: undefined\n    };\n  }\n\n  render() {\n    const { data, config } = this.props;\n    const { targetItem } = this.state;\n\n    const TooltipContent = () => (\n      <div>\n        <Tooltip.Content\n          targetItem={targetItem}\n          text={`${config.nameKey}: ${data[targetItem.point][config.nameKey]}`}\n        />\n        <Tooltip.Content\n          targetItem={targetItem}\n          text={`${config.dataKey}: ${data[targetItem.point][config.dataKey]}`}\n        />\n      </div>\n    );\n\n    return (\n      <Chart data={data} height={config.size}>\n        <PieSeries valueField={config.dataKey} argumentField={config.nameKey} />\n        <EventTracker />\n        <Tooltip\n          targetItem={targetItem}\n          contentComponent={TooltipContent}\n          onTargetItemChange={(targetItem: any) =>\n            this.setState({ targetItem })\n          }\n        />\n        <Animation />\n      </Chart>\n    );\n  }\n}\n\nexport default PieChart;\n","import * as React from \"react\";\nimport {\n  WithStyles,\n  Theme,\n  createStyles,\n  withStyles,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport QuestionIcon from \"@material-ui/icons/HelpOutline\";\nimport PieChart from \"components/common/PieChart\";\nimport { Member } from \"lib/state\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  data: Member[];\n}\n\nclass MembersAnalytics extends React.Component<Props> {\n  render() {\n    const { classes, data } = this.props;\n\n    return (\n      <>\n        <Grid item xs={12} sm={6} md={3}>\n          <Typography\n            variant=\"h6\"\n            className={classes.pieChartHeadlines}\n            gutterBottom\n          >\n            Reputation Distribution\n          </Typography>\n          {data.length > 0 ? (\n            <PieChart\n              data={data}\n              config={{\n                size: 240,\n                dataKey: \"reputation\",\n                nameKey: \"address\"\n              }}\n            />\n          ) : (\n            <QuestionIcon color={\"primary\"} className={classes.questionIcon} />\n          )}\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Typography\n            variant=\"h6\"\n            className={classes.pieChartHeadlines}\n            gutterBottom\n          >\n            Tokens Distribution\n          </Typography>\n          {data.length > 0 ? (\n            <PieChart\n              data={data}\n              config={{\n                size: 240,\n                dataKey: \"tokens\",\n                nameKey: \"address\"\n              }}\n            />\n          ) : (\n            <QuestionIcon color={\"primary\"} className={classes.questionIcon} />\n          )}\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pieChartHeadlines: {\n      textAlign: \"center\"\n    },\n    questionIcon: {\n      width: \"100%\",\n      height: \"75%\",\n      alignSelf: \"center\"\n    }\n  });\n\nexport default withStyles(styles)(MembersAnalytics);\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  WithStyles,\n  Theme,\n  createStyles,\n  withStyles,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport MembersEditor from \"components/common/dao/MembersEditor\";\nimport MembersAnalytics from \"components/common/dao/MembersAnalytics\";\nimport { MembersForm } from \"lib/forms\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  form: MembersForm;\n  getDAOTokenSymbol: () => string;\n}\n\n@observer\nclass MembersStep extends React.Component<Props> {\n  render() {\n    const { classes, form, getDAOTokenSymbol } = this.props;\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>\n            Add Members\n          </Typography>\n          <Grid container>\n            <Grid item xs={12} md={6}>\n              <Typography className={classes.guideText} variant=\"body2\">\n                Here we specify the initial reputation and token distribution in\n                the DAO.\n                <br />\n                <br />\n                We do this by specifying the addresses together with the amount\n                of reputation and tokens for each address.\n              </Typography>\n            </Grid>\n            <MembersAnalytics data={form.toState()} />\n            <MembersEditor\n              getDAOTokenSymbol={getDAOTokenSymbol}\n              form={form}\n              editable={true}\n              maxScrollHeight={\"20rem\"}\n            />\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    guideText: {\n      fontSize: 18,\n      maxWidth: 450,\n      paddingLeft: 30,\n      paddingRight: 30,\n      paddingTop: 50,\n      paddingBottom: 50,\n      margin: \"auto\"\n    }\n  });\n\nexport default withStyles(styles)(MembersStep);\n","import * as React from \"react\";\nimport FormField from \"components/common/FormField\";\nimport { GenesisProtocolForm } from \"lib/forms\";\n\ninterface Props {\n  form: GenesisProtocolForm;\n  editable: boolean;\n}\n\nexport default class GenesisProtocolEditor extends React.Component<Props> {\n  render() {\n    const { form, editable } = this.props;\n    const formState = form.$ as any;\n\n    // TODO: make this the default behaviour of all form components\n    // All editors should just be this, and the fields themselves should contain\n    // a type. Then overrides can be made.\n    return (\n      <>\n        {Object.keys(formState).map((propName: string, index: number) => (\n          <FormField\n            field={formState[propName]}\n            editable={editable}\n            key={`genproto-field-${index}`}\n          />\n        ))}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  Select,\n  FilledInput,\n  FormControl,\n  InputLabel,\n  Grid,\n  Fab,\n  Dialog,\n  DialogTitle,\n  DialogContentText,\n  DialogContent,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Settings\";\nimport GenesisProtocolEditor from \"./GenesisProtocolEditor\";\nimport { GenesisProtocolForm } from \"lib/forms\";\nimport { GenesisProtocolPreset } from \"lib/dependency/arc\";\n\ninterface Props {\n  form: GenesisProtocolForm;\n  editable: boolean;\n}\n\ninterface State {\n  editing: boolean;\n}\n\n@observer\nexport default class GenesisProtocolPresetEditor extends React.Component<\n  Props,\n  State\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      editing: false\n    };\n  }\n\n  render() {\n    const { form, editable } = this.props;\n    const { editing } = this.state;\n\n    const onChange = (event: React.ChangeEvent<{ value: any }>) => {\n      let value = event.target.value;\n\n      if (value === \"0\") {\n        value = undefined;\n        this.setState({ editing: true });\n      }\n\n      form.preset = value;\n      this.forceUpdate();\n    };\n\n    const onEdit = () => {\n      form.preset = undefined;\n      this.setState({\n        ...this.state,\n        editing: true\n      });\n    };\n\n    const onClose = async () => {\n      const res = await this.props.form.validate();\n\n      if (res.hasError) {\n        return;\n      }\n\n      this.setState({\n        ...this.state,\n        editing: false\n      });\n    };\n\n    // TODO: base class for all forms (move analytics into step, pass for into here)\n    return (\n      <>\n        <FormControl variant=\"filled\" fullWidth>\n          <InputLabel htmlFor=\"protocol\">Genesis Protocol</InputLabel>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={10}>\n              <Select\n                native\n                fullWidth\n                disabled={!editable}\n                value={form.preset === undefined ? 0 : form.preset}\n                onChange={onChange}\n                input={<FilledInput name=\"protocol\" id=\"protocol\" />}\n              >\n                <option value={GenesisProtocolPreset.Easy}>Easy</option>\n                <option value={GenesisProtocolPreset.Normal}>Normal</option>\n                <option value={GenesisProtocolPreset.Critical}>Critical</option>\n                <option value={0}>Custom</option>\n              </Select>\n            </Grid>\n            <Grid item>\n              <Fab\n                disabled={!editable}\n                size=\"small\"\n                color=\"secondary\"\n                onClick={onEdit}\n              >\n                <EditIcon />\n              </Fab>\n            </Grid>\n          </Grid>\n        </FormControl>\n        <Dialog\n          open={editing}\n          onClose={onClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Genesis Protocol</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <div>\n                Genesis protocol is our implementation of holographic consensus\n                as a smart contract on the ethereum blockchain. In order to\n                allow various use cases, the genesis protocol has several\n                configurations parameters:\n              </div>\n            </DialogContentText>\n            <GenesisProtocolEditor form={form} editable={true} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose}>Save</Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  withStyles,\n  LinearProgress,\n  Typography,\n  Popover,\n  ButtonBase\n} from \"@material-ui/core\";\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\nimport { AnalysisResult } from \"./utils\";\n\nconst AnalysisResultView = (props: {\n  title: string;\n  result: AnalysisResult;\n}) => {\n  const NormalStyle = {\n    root: {\n      height: 5,\n      backgroundColor: \"#94d8ff\"\n    },\n    bar: {\n      borderRadius: 20,\n      backgroundColor: \"#00a2ff\"\n    }\n  };\n  const WarningStyle = {\n    root: {\n      height: 5,\n      backgroundColor: \"#ffd178\"\n    },\n    bar: {\n      borderRadius: 20,\n      backgroundColor: \"#ffa800\"\n    }\n  };\n  const Normal = withStyles(NormalStyle)(LinearProgress);\n  const Warning = withStyles(WarningStyle)(LinearProgress);\n\n  const { title, result } = props;\n  let value = result.t;\n\n  // keep a little showing if there is no bar\n  if (Math.fround(result.t) === 0 && !result.warning) {\n    value = 0.05;\n  }\n\n  value *= 100;\n\n  return (\n    <PopupState variant=\"popover\" popupId=\"popup-popover\">\n      {(popupState: any) => (\n        <>\n          <ButtonBase\n            style={{ width: \"100%\" }}\n            focusRipple\n            {...bindTrigger(popupState)}\n          >\n            <span style={{ width: \"100%\" }}>\n              <Typography variant=\"subtitle2\">{title}</Typography>\n              {result.warning ? (\n                <Warning\n                  variant=\"determinate\"\n                  color=\"secondary\"\n                  value={value}\n                />\n              ) : (\n                <Normal variant=\"determinate\" color=\"secondary\" value={value} />\n              )}\n            </span>\n          </ButtonBase>\n          <Popover\n            {...bindPopover(popupState)}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\"\n            }}\n          >\n            {result.message}\n          </Popover>\n        </>\n      )}\n    </PopupState>\n  );\n};\n\nexport default AnalysisResultView;\n","export interface AnalysisResult {\n  t: number;\n  message: string | React.ReactFragment;\n  warning: boolean;\n}\n\nexport interface AnalysisOpts {\n  min: number;\n  max: number;\n  toString: (value: number) => string;\n}\n\nexport const analyzeField = (\n  value: number,\n  name: string,\n  opts: AnalysisOpts\n): AnalysisResult => {\n  const { min, max } = opts;\n  let toString = opts.toString;\n\n  // Lerp between min and max based on\n  let t: number;\n\n  if (Math.fround(min - max) === 0) {\n    if (value > max) {\n      t = 1.1;\n    } else if (value < min) {\n      t = -0.1;\n    } else {\n      t = 1;\n    }\n  } else {\n    t = (value - min) / (max - min);\n  }\n\n  const warning: boolean = t < 0 || t > 1;\n  let message: string = ``;\n\n  if (t < 0) {\n    message += `${name}: LOWER than recommended min of ${toString(min)}`;\n    t = 0;\n  } else if (t > 1) {\n    message += `${name}: LARGER than recommended max of ${toString(max)}`;\n    t = 1;\n  } else {\n    message += `${name}: ${toString(value)}`;\n  }\n\n  return {\n    t,\n    message,\n    warning\n  };\n};\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  WithStyles,\n  Theme,\n  createStyles,\n  withStyles,\n  Typography,\n  Divider\n} from \"@material-ui/core\";\nimport AnalysisResultView from \"./AnalysisResultView\";\nimport { analyzeField, AnalysisResult } from \"./utils\";\nimport { GenesisProtocolForm } from \"lib/forms\";\nimport { GenesisProtocol as GP } from \"lib/dependency/arc\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  form: GenesisProtocolForm;\n}\n\n@observer\nclass GenesisProtocolAnalytics extends React.Component<Props> {\n  render() {\n    const { classes, form } = this.props;\n\n    const secondsToString = (seconds: number) =>\n      formatDays(secondsToDays(seconds));\n\n    const proposalSpeedAnalytics = combineResults(\n      analyzeField(\n        form.$.boostedVotePeriodLimit.toSeconds(),\n        form.$.boostedVotePeriodLimit.displayName,\n        {\n          min: GP.EasyConfig.boostedVotePeriodLimit,\n          max: GP.CriticalConfig.boostedVotePeriodLimit,\n          toString: secondsToString\n        }\n      ),\n      analyzeField(\n        form.$.queuedVotePeriodLimit.toSeconds(),\n        form.$.queuedVotePeriodLimit.displayName,\n        {\n          min: GP.EasyConfig.queuedVotePeriodLimit,\n          max: GP.CriticalConfig.queuedVotePeriodLimit,\n          toString: secondsToString\n        }\n      ),\n      analyzeField(\n        form.$.preBoostedVotePeriodLimit.toSeconds(),\n        form.$.preBoostedVotePeriodLimit.displayName,\n        {\n          min: GP.EasyConfig.preBoostedVotePeriodLimit,\n          max: GP.CriticalConfig.preBoostedVotePeriodLimit,\n          toString: secondsToString\n        }\n      )\n    );\n\n    const boostDifficultyAnalytics = combineResults(\n      analyzeField(\n        Number(form.$.minimumDaoBounty.value),\n        form.$.minimumDaoBounty.displayName,\n        {\n          min: GP.EasyConfig.minimumDaoBounty,\n          max: GP.CriticalConfig.minimumDaoBounty,\n          toString: formatGEN\n        }\n      ),\n      analyzeField(\n        Number(form.$.thresholdConst.value),\n        form.$.thresholdConst.displayName,\n        {\n          min: GP.EasyConfig.thresholdConst,\n          max: GP.CriticalConfig.thresholdConst,\n          toString: (value: number) => value.toString()\n        }\n      )\n    );\n\n    const voterAlignmentAssuranceAnalytics = combineResults(\n      analyzeField(\n        Number(form.$.queuedVoteRequiredPercentage.value),\n        form.$.queuedVoteRequiredPercentage.displayName,\n        {\n          min: GP.EasyConfig.queuedVoteRequiredPercentage,\n          max: GP.CriticalConfig.queuedVoteRequiredPercentage,\n          toString: formatPercentage\n        }\n      ),\n      analyzeField(\n        form.$.quietEndingPeriod.toSeconds(),\n        form.$.quietEndingPeriod.displayName,\n        {\n          min: GP.EasyConfig.quietEndingPeriod,\n          max: GP.CriticalConfig.quietEndingPeriod,\n          toString: secondsToString\n        }\n      )\n    );\n\n    const alignmentIncentiveAnalytics = combineResults(\n      analyzeField(\n        Number(form.$.proposingRepReward.value),\n        form.$.proposingRepReward.displayName,\n        {\n          min: GP.EasyConfig.proposingRepReward,\n          max: GP.CriticalConfig.proposingRepReward,\n          toString: formatREP\n        }\n      ),\n      analyzeField(\n        Number(form.$.daoBountyConst.value),\n        form.$.daoBountyConst.displayName,\n        {\n          min: GP.EasyConfig.daoBountyConst,\n          max: GP.CriticalConfig.daoBountyConst,\n          toString: (value: number) => value.toString()\n        }\n      )\n    );\n\n    const voterMisalignmentPenaltyAnalytics = combineResults(\n      analyzeField(\n        Number(form.$.votersReputationLossRatio.value),\n        form.$.votersReputationLossRatio.displayName,\n        {\n          min: GP.EasyConfig.votersReputationLossRatio,\n          max: GP.CriticalConfig.votersReputationLossRatio,\n          toString: formatPercentage\n        }\n      )\n    );\n\n    // TODO: voteOnBehalf (etherscan link), activationTime (timer letting them know how long it'll be deactive for)\n    return (\n      <>\n        <Divider className={classes.divider} />\n        <AnalysisResultView\n          title=\"Proposal Duration\"\n          result={proposalSpeedAnalytics}\n        />\n        <Divider className={classes.divider} />\n        <AnalysisResultView\n          title=\"Boost Difficulty\"\n          result={boostDifficultyAnalytics}\n        />\n        <Divider className={classes.divider} />\n        <AnalysisResultView\n          title=\"Voter Alignment Assurance\"\n          result={voterAlignmentAssuranceAnalytics}\n        />\n        <Divider className={classes.divider} />\n        <AnalysisResultView\n          title=\"Alignment Incentive\"\n          result={alignmentIncentiveAnalytics}\n        />\n        <Divider className={classes.divider} />\n        <AnalysisResultView\n          title=\"Voter Misalignment Penalty\"\n          result={voterMisalignmentPenaltyAnalytics}\n        />\n      </>\n    );\n  }\n}\n\n// TODO: make this into a \"DateTime\" dependency in the lib when\n// that field view is made\nconst secondsToDays = (seconds: number): number => {\n  return seconds / 86400;\n};\n\nconst formatDays = (days: number): string => {\n  return `${Math.fround(days)} Days`;\n};\n\nconst formatPercentage = (percentage: number): string => {\n  return `${Math.fround(percentage)}%`;\n};\n\nconst formatGEN = (gen: number): string => {\n  return `${Math.fround(gen)} GEN`;\n};\n\nconst formatREP = (rep: number): string => {\n  return `${Math.fround(rep)} REP`;\n};\n\nexport const combineResults = (\n  ...results: AnalysisResult[]\n): AnalysisResult => {\n  // Aggregate results into a single result struct\n  let result: AnalysisResult = {\n    t: 0,\n    warning: false,\n    message: \"\"\n  };\n\n  results.forEach(value => {\n    result.t += value.t;\n    result.warning = result.warning || value.warning;\n  });\n\n  result.message = (\n    <div style={{ margin: \"10px\" }}>\n      {results.map((result, index) => {\n        const msg = result.message as string;\n\n        if (msg === undefined) {\n          throw Error(\"This should never happen\");\n        }\n\n        const parts = msg.split(\":\");\n\n        if (parts.length !== 2) {\n          throw Error(\"Message is malformed\");\n        }\n\n        return (\n          <Typography\n            color={result.warning ? \"error\" : \"textPrimary\"}\n            key={`msg-${index}`}\n          >\n            <b>{parts[0]}:</b> {parts[1]}\n          </Typography>\n        );\n      })}\n    </div>\n  );\n\n  // Average the t values\n  result.t /= results.length;\n\n  return result;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divider: {\n      marginTop: 10,\n      marginBottom: 5\n    }\n  });\n\nexport default withStyles(styles)(GenesisProtocolAnalytics);\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  Theme,\n  createStyles,\n  WithStyles,\n  withStyles,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  Collapse\n} from \"@material-ui/core\";\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport GenesisProtocolPresetEditor from \"./GenesisProtocolPresetEditor\";\nimport GenesisProtocolAnalytics from \"./GenesisProtocolAnalytics\";\nimport { AnySchemeForm } from \"lib/forms\";\nimport FormField from \"components/common/FormField\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  form: AnySchemeForm;\n  editable: boolean;\n  enabled: boolean;\n  Icon: React.ComponentType<SvgIconProps>;\n  onToggle: (toggled: boolean) => void;\n}\n\ninterface State {\n  enabled: boolean;\n}\n\n@observer\nclass SchemeEditor extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { enabled: props.enabled };\n  }\n\n  render() {\n    const { classes, form, editable, Icon } = this.props;\n    const { enabled } = this.state;\n    const params = form.getParams();\n\n    const onToggle = (event: object, checked: boolean) => {\n      this.props.onToggle(checked);\n      this.setState({\n        enabled: checked\n      });\n    };\n\n    return (\n      <Grid item>\n        <Card className={classes.card} raised>\n          <CardContent>\n            <Grid\n              container\n              alignItems=\"flex-start\"\n              direction=\"row\"\n              justify=\"space-between\"\n            >\n              <Grid item>\n                <Typography variant=\"h4\">{form.displayName}</Typography>\n              </Grid>\n              <Grid item>\n                <Switch\n                  disabled={!editable}\n                  checked={enabled}\n                  onChange={onToggle}\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              alignItems=\"center\"\n              direction=\"column\"\n              justify=\"center\"\n            >\n              <Grid item xs={6}>\n                <Icon color=\"primary\" className={classes.schemeIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"body1\"\n                  className={classes.schemeDescription}\n                >\n                  {form.description}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Collapse in={enabled}>\n              <div>\n                {params.length > 0 ? (\n                  <>\n                    <Typography variant=\"h6\">Parameters</Typography>\n                    {params.map((param, index) => (\n                      <FormField\n                        field={param}\n                        editable={editable}\n                        key={`field-${index}`}\n                      />\n                    ))}\n                  </>\n                ) : (\n                  <></>\n                )}\n                <Typography variant=\"h6\">Voting Configuration</Typography>\n                <GenesisProtocolPresetEditor\n                  form={form.$.votingMachine}\n                  editable={editable}\n                />\n                <GenesisProtocolAnalytics form={form.$.votingMachine} />\n              </div>\n            </Collapse>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    card: {\n      minWidth: 410,\n      maxWidth: 420\n    },\n    schemeIcon: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    schemeDescription: {\n      marginBottom: 15\n    }\n  });\n\nexport default withStyles(styles)(SchemeEditor);\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { observable, IObservableObject } from \"mobx\";\nimport {\n  WithStyles,\n  Theme,\n  createStyles,\n  withStyles,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport ContributionRewardIcon from \"@material-ui/icons/DonutSmallTwoTone\";\nimport SchemeRegistrarIcon from \"@material-ui/icons/WidgetsTwoTone\";\nimport GenericSchemeIcon from \"@material-ui/icons/LanguageTwoTone\";\nimport SchemeEditor from \"./SchemeEditor\";\nimport {\n  SchemesForm,\n  AnySchemeForm,\n  GenericSchemeForm,\n  ContributionRewardForm,\n  SchemeRegistrarForm\n} from \"lib/forms\";\nimport { SchemeType } from \"lib/dependency/arc\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  form: SchemesForm;\n  editable: boolean;\n}\n\ninterface SchemeFormDrawers {\n  form: AnySchemeForm;\n  enabled: boolean;\n  Icon: React.ComponentType<SvgIconProps>;\n}\n\ntype IconType = React.ComponentType<SvgIconProps>;\n\n@observer\nclass SchemesEditor extends React.Component<Props> {\n  icons: { [type: number]: IconType } = {};\n  fillers: { [type: number]: AnySchemeForm & IObservableObject } = {};\n\n  constructor(props: Props) {\n    super(props);\n\n    this.icons[SchemeType.ContributionReward] = ContributionRewardIcon;\n    this.icons[SchemeType.GenericScheme] = GenericSchemeIcon;\n    this.icons[SchemeType.SchemeRegistrar] = SchemeRegistrarIcon;\n\n    this.fillers[SchemeType.ContributionReward] = observable(\n      new ContributionRewardForm()\n    );\n    this.fillers[SchemeType.SchemeRegistrar] = observable(\n      new SchemeRegistrarForm()\n    );\n    this.fillers[SchemeType.GenericScheme] = observable(\n      new GenericSchemeForm()\n    );\n  }\n\n  render() {\n    const { classes, form, editable } = this.props;\n    const error = form.showFormError;\n\n    let schemes: SchemeFormDrawers[] = [];\n\n    // iterate through each scheme type\n    for (const type in SchemeType) {\n      // https://tinyurl.com/y33e9j9x\n      if (isNaN(Number(type))) {\n        break;\n      }\n\n      const schemeType: SchemeType = Number(type);\n      const index = form.$.findIndex(scheme => scheme.type === schemeType);\n      const added = index > -1;\n\n      schemes.push({\n        form: added ? form.$[index] : this.fillers[schemeType],\n        enabled: added,\n        Icon: this.icons[schemeType]\n      });\n    }\n\n    return (\n      <div className={classes.root}>\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"baseline\"\n        >\n          {schemes.map((scheme, index) => {\n            if (!editable && !scheme.enabled) {\n              return <></>;\n            }\n\n            return (\n              <SchemeEditor\n                form={scheme.form}\n                Icon={scheme.Icon}\n                editable={editable}\n                enabled={scheme.enabled}\n                onToggle={(toggled: boolean) => {\n                  if (toggled) {\n                    form.$.push(scheme.form);\n                  } else {\n                    const index = form.$.findIndex(\n                      test => test.type === scheme.form.type\n                    );\n\n                    if (index === -1) {\n                      throw Error(\n                        \"Trying to remove scheme that hasn't been added.\"\n                      );\n                    }\n\n                    form.$.splice(index, 1);\n                  }\n                }}\n                key={`scheme-${index}`}\n              />\n            );\n          })}\n        </Grid>\n        {error ? <Typography color={\"error\"}>{form.error}</Typography> : <></>}\n      </div>\n    );\n  }\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    }\n  });\n\nexport default withStyles(styles)(SchemesEditor);\n","import * as React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport SchemesEditor from \"components/common/dao/SchemesEditor\";\nimport { SchemesForm } from \"lib/forms\";\n\ninterface Props {\n  form: SchemesForm;\n}\n\n@observer\nexport default class SchemesStep extends React.Component<Props> {\n  render() {\n    const { form } = this.props;\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom>\n            Add Schemes\n          </Typography>\n          <SchemesEditor form={form} editable={true} />\n        </CardContent>\n      </Card>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Grid,\n  Fab\n} from \"@material-ui/core\";\nimport WarningIcon from \"@material-ui/icons/WarningTwoTone\";\nimport EditIcon from \"@material-ui/icons/Settings\";\nimport SchemesEditor from \"components/common/dao/SchemesEditor\";\nimport DAOConfigEditor from \"components/common/dao/DAOConfigEditor\";\nimport MembersEditor from \"components/common/dao/MembersEditor\";\nimport MembersAnalytics from \"components/common/dao/MembersAnalytics\";\nimport { DAOForm } from \"lib/forms\";\nimport { SchemeType } from \"lib/state\";\n\ninterface Props {\n  form: DAOForm;\n  // TODO: don't use a number here, use an enum instead. This will break easily.\n  setStep: (step: number) => void;\n}\n\nexport default class ReviewStep extends React.Component<Props> {\n  render() {\n    const { form, setStep } = this.props;\n    const { config, schemes, members } = form.$;\n    const getDAOTokenSymbol = () => config.$.tokenSymbol.value;\n    const missingSchemeReg =\n      schemes.$.findIndex(\n        scheme => scheme.type === SchemeType.SchemeRegistrar\n      ) === -1;\n\n    const modifyStep = (step: number) => (\n      <Fab\n        color={\"primary\"}\n        onClick={() => setStep(step)}\n        style={{\n          height: \"20px\",\n          width: \"20px\",\n          minHeight: \"20px\",\n          marginRight: \"5px\",\n          marginTop: \"5px\"\n        }}\n      >\n        <EditIcon fontSize={\"inherit\"} />\n      </Fab>\n    );\n\n    const titleText = (title: string, step: number) => (\n      <Grid container direction={\"row\"}>\n        {modifyStep(step)}\n        <Typography variant=\"h5\" gutterBottom>\n          {title}\n        </Typography>\n      </Grid>\n    );\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\">Review your new DAO:</Typography>\n          <Divider />\n          <Grid container spacing={3} direction={\"column\"}>\n            <Grid item>\n              {titleText(\"Names\", 0)}\n              <Grid container justify={\"center\"}>\n                <DAOConfigEditor form={config} editable={false} />\n              </Grid>\n            </Grid>\n            <Grid item>\n              {titleText(\"Schemes\", 1)}\n              <SchemesEditor form={schemes} editable={false} />\n              {missingSchemeReg ? (\n                <Grid container direction={\"row\"}>\n                  <WarningIcon color={\"error\"} />\n                  <Typography color={\"error\"}>\n                    Warning: Your DAO is missing a SchemeRegistrar, and will not\n                    be able to modify itself once deployed. We highly recommend\n                    adding this to your DAO.\n                  </Typography>\n                </Grid>\n              ) : (\n                <></>\n              )}\n            </Grid>\n            <Grid item>\n              {titleText(\"Members\", 2)}\n              <Grid container direction={\"row\"} justify={\"center\"}>\n                <MembersAnalytics data={members.toState()} />\n              </Grid>\n              <MembersEditor\n                form={members}\n                editable={false}\n                getDAOTokenSymbol={getDAOTokenSymbol}\n                maxScrollHeight={\"200px\"}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles,\n  Button,\n  ButtonGroup,\n  ExpansionPanel,\n  Paper,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  Grid,\n  Box,\n  Divider,\n  CircularProgress,\n  IconButton,\n  Menu,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Link\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMoreOutlined\";\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\nimport ErrorIcon from \"@material-ui/icons/ErrorOutline\";\nimport TransactionResultIcon from \"@material-ui/icons/DoneOutline\";\nimport UserApprovalIcon from \"@material-ui/icons/QuestionAnswerOutlined\";\nimport AbortedIcon from \"@material-ui/icons/SmsFailedOutlined\";\nimport MoreInfoIcon from \"@material-ui/icons/MoreVert\";\nimport ReactPlayer from \"react-player\";\nimport {\n  AnyLogLine,\n  LogInfo,\n  LogError,\n  LogTransactionResult,\n  LogUserApproval,\n  LogMigrationAborted,\n  LogType\n} from \"./LogLineTypes\";\nimport {\n  DAOMigrationCallbacks,\n  DAOMigrationParams,\n  migrateDAO,\n  DAOMigrationResult,\n  toJSON\n} from \"lib/dependency/arc\";\nimport { getNetworkName } from \"lib/dependency/web3\";\n\nconst FileSaver = require(\"file-saver\");\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  dao: DAOMigrationParams;\n  onComplete: (result: DAOMigrationResult) => void;\n  onAbort: (error: Error) => void;\n}\n\ninterface State {\n  logLines: AnyLogLine[];\n  started: boolean;\n  finished: boolean;\n  ethSpent: number;\n  result: DAOMigrationResult | undefined;\n  logClosed: boolean;\n  menuAnchor: any;\n  exportOpen: boolean;\n}\n\nconst initState: State = {\n  logLines: [],\n  started: false,\n  finished: false,\n  ethSpent: 0,\n  result: undefined,\n  logClosed: false,\n  menuAnchor: undefined,\n  exportOpen: false\n};\n\nclass Migrator extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...initState\n    };\n    this.onStart = this.onStart.bind(this);\n  }\n\n  private addLogLine(line: AnyLogLine) {\n    const { logLines } = this.state;\n\n    this.setState({\n      ...this.state,\n      logLines: [...logLines, line]\n    });\n  }\n\n  private async onStart() {\n    const { onAbort, onComplete, dao } = this.props;\n\n    // Callbacks used for the migration\n    const callbacks: DAOMigrationCallbacks = {\n      userApproval: (msg: string): Promise<boolean> =>\n        new Promise<boolean>(resolve =>\n          this.addLogLine(\n            new LogUserApproval(msg, (resp: boolean) => resolve(resp))\n          )\n        ),\n      info: (msg: string) => this.addLogLine(new LogInfo(msg)),\n      error: (msg: string) => this.addLogLine(new LogError(msg)),\n      txComplete: (msg: string, txHash: string, txCost: number) =>\n        new Promise<void>(resolve => {\n          const { ethSpent } = this.state;\n          this.setState({\n            ...this.state,\n            ethSpent: Number(ethSpent) + Number(txCost)\n          });\n          this.addLogLine(new LogTransactionResult(msg, txHash, txCost));\n          resolve();\n        }),\n      migrationAborted: (err: Error) => {\n        this.addLogLine(new LogMigrationAborted(err));\n        onAbort(err);\n      },\n      migrationComplete: (result: DAOMigrationResult) => {\n        this.setState({\n          ...this.state,\n          finished: true,\n          result\n        });\n        onComplete(result);\n      }\n    };\n\n    this.setState({\n      ...initState,\n      finished: false,\n      started: true,\n      result: undefined\n    });\n    const result = await migrateDAO(dao, callbacks);\n    this.setState({ ...this.state, finished: true, result });\n  }\n\n  render() {\n    const { dao, classes } = this.props;\n    const {\n      started,\n      finished,\n      logLines,\n      ethSpent,\n      result,\n      logClosed,\n      menuAnchor,\n      exportOpen\n    } = this.state;\n\n    const onOptionsClick = (event: any) => {\n      this.setState({\n        ...this.state,\n        menuAnchor: event.currentTarget\n      });\n    };\n\n    const onOptionsClose = () => {\n      this.setState({\n        ...this.state,\n        menuAnchor: undefined\n      });\n    };\n\n    const onSaveDAO = () => {\n      var blob = new Blob([toJSON(dao)], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      FileSaver.saveAs(blob, \"migration-params.json\");\n    };\n\n    const onCopyLog = () => {\n      let log = \"\";\n\n      logLines.map(line => {\n        return (log += line.toString() + \"\\n\");\n      });\n\n      navigator.clipboard.writeText(log);\n      this.setState({\n        ...this.state,\n        menuAnchor: undefined\n      });\n    };\n\n    const Line: React.SFC<{\n      index: number;\n      icon: any;\n    }> = ({ index, icon, children }) => (\n      <Paper className={index % 2 === 0 ? classes.darkLine : classes.lightLine}>\n        <Box overflow={\"auto\"} maxWidth={\"100%\"} display={\"flex\"}>\n          {icon}\n          {children}\n        </Box>\n      </Paper>\n    );\n\n    const Log = () => (\n      <>\n        {logLines.map((line, index) => {\n          switch (line.type) {\n            case LogType.Info:\n              const info = line as LogInfo;\n              return (\n                <Line index={index} icon={<InfoIcon />}>\n                  <div style={{ alignSelf: \"center\" }}>{info.info}</div>\n                </Line>\n              );\n            case LogType.Error:\n              const error = line as LogError;\n              return (\n                <Line index={index} icon={<ErrorIcon />}>\n                  <div style={{ alignSelf: \"center\", color: \"red\" }}>\n                    {`${error.error}`}\n                  </div>\n                </Line>\n              );\n            case LogType.TransactionResult:\n              const result = line as LogTransactionResult;\n              return (\n                <Line index={index} icon={<TransactionResultIcon />}>\n                  <Grid container direction={\"column\"}>\n                    <Typography>{result.msg}</Typography>\n                    <Typography>\n                      {\"Transaction: \"}\n                      <Link\n                        onClick={async () => {\n                          const network = await getNetworkName();\n                          let url = `etherscan.io/tx/${result.txHash}`;\n\n                          if (network !== \"mainnet\") {\n                            url = `https://${network}.${url}`;\n                          } else {\n                            url = `https://${url}`;\n                          }\n\n                          window.open(url);\n                        }}\n                      >\n                        {`${result.txHash.substr(0, 12)}...`}\n                      </Link>\n                    </Typography>\n                    <Typography>{`Cost: ${result.txCost} ETH`}</Typography>\n                  </Grid>\n                </Line>\n              );\n            case LogType.UserApproval:\n              const approval = line as LogUserApproval;\n              const { response, question, onResponse } = approval;\n              return (\n                <Line index={index} icon={<UserApprovalIcon />}>\n                  <Grid\n                    container\n                    justify={\"space-between\"}\n                    alignItems={\"center\"}\n                  >\n                    {question}\n                    <ButtonGroup size={\"small\"}>\n                      <Button\n                        onClick={() => {\n                          onResponse(true);\n                          approval.response = true;\n                        }}\n                        variant={response === true ? \"contained\" : \"outlined\"}\n                        color={\"primary\"}\n                        disabled={response !== undefined}\n                        className={classes.confirmButton}\n                      >\n                        Yes\n                      </Button>\n                      <Button\n                        onClick={() => {\n                          onResponse(false);\n                          approval.response = false;\n                        }}\n                        variant={response === false ? \"contained\" : \"outlined\"}\n                        color={\"primary\"}\n                        disabled={response !== undefined}\n                        className={classes.confirmButton}\n                      >\n                        No\n                      </Button>\n                    </ButtonGroup>\n                  </Grid>\n                </Line>\n              );\n            case LogType.MigrationAborted:\n              const aborted = line as LogMigrationAborted;\n              return (\n                <Line index={index} icon={<AbortedIcon />}>\n                  <div style={{ alignSelf: \"center\", color: \"red\" }}>\n                    {`${aborted.error}`}\n                  </div>\n                </Line>\n              );\n            default:\n              throw Error(\"LogType Unimplemented\");\n          }\n        })}\n      </>\n    );\n\n    const ExportDialog = () => (\n      <Dialog\n        open={exportOpen}\n        fullWidth\n        onClose={() => this.setState({ ...this.state, exportOpen: false })}\n        aria-labelledby={\"export-dao-config\"}\n      >\n        <DialogTitle>Export JSON Config</DialogTitle>\n        <DialogContent className={classes.dialog}>\n          <DialogContentText>\n            <div>\n              Your DAO can be exported as a json configuration file that can be\n              used with the daostack/migration project. Save your DAO's\n              `migration-params.json` file using the button below, and watch the\n              following tutorial to understand how to manually deploy your DAO\n              with this file:\n            </div>\n            <ReactPlayer url=\"https://youtu.be/SXqaWr7veus\" width={550} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant={\"contained\"} color={\"primary\"} onClick={onSaveDAO}>\n            Export\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n\n    const MigrationResults = () => {\n      const text = JSON.stringify(result, null, 2);\n      return (\n        <>\n          <Typography variant={\"h6\"} className={classes.successText}>\n            Deployment Successful!\n          </Typography>\n          <div className={classes.resultWrapper}>\n            <Paper className={classes.result}>\n              <Button\n                onClick={() => navigator.clipboard.writeText(text)}\n                variant={\"outlined\"}\n                size={\"small\"}\n                style={{ float: \"right\" }}\n              >\n                Copy\n              </Button>\n              {text}\n            </Paper>\n            <Typography variant={\"subtitle2\"}>\n              Now what? Copy the above text, email it to contact@dorg.tech along\n              with a description of your DAO, and we'll add it to the\n              https://github.com/daostack/subgraph repository for you.\n            </Typography>\n            <Typography variant={\"subtitle2\"}>\n              Have feedback? Click the icon in the bottom right and let us know\n              what you think!\n            </Typography>\n          </div>\n          <Divider className={classes.resultsDivider} />\n        </>\n      );\n    };\n\n    return (\n      <>\n        <Typography variant={\"subtitle2\"} color={\"error\"}>\n          NOTE: The DAO you deploy will not be available in Alchemy\n          automatically. This is actively being worked on. After the deployment\n          process is complete, you'll be required to send your results to an\n          email address to get it added to Alchemy.\n        </Typography>\n        <Divider className={classes.resultsDivider} />\n        <Typography variant={\"subtitle2\"} color={\"error\"}>\n          WARNING: Mainnet deploy at your own risk! There are a few things being\n          worked on to improve mainnet transaction handling, you can find out\n          about them in the links below. The gas is currently set rather high (7\n          Gwei) to try and ensure transaction succeed within 50 blocks. This is\n          not fool proof.\n          <br />\n          https://github.com/daostack/migration/issues/211\n          <br />\n          https://github.com/daostack/migration/issues/206\n        </Typography>\n        <Divider className={classes.resultsDivider} />\n        <Typography variant={\"subtitle2\"} color={\"error\"}>\n          WARNING: Do not use the \"Speed Up Transaction\" feature in your wallet,\n          this will break the deployment process. A fix is being worked on.\n        </Typography>\n        <Divider className={classes.resultsDivider} />\n        {result ? <MigrationResults /> : <></>}\n        <ExpansionPanel expanded={started && !logClosed}>\n          <ExpansionPanelSummary\n            expandIcon={\n              finished ? (\n                <ExpandMoreIcon\n                  onClick={() =>\n                    this.setState({ ...this.state, logClosed: !logClosed })\n                  }\n                />\n              ) : (\n                undefined\n              )\n            }\n            className={classes.logHeader}\n          >\n            <Grid container justify={\"space-between\"} alignItems={\"center\"}>\n              <IconButton\n                aria-haspopup=\"true\"\n                onClick={onOptionsClick}\n                size={\"small\"}\n              >\n                <MoreInfoIcon />\n              </IconButton>\n              <Menu\n                anchorEl={menuAnchor}\n                open={menuAnchor !== undefined}\n                keepMounted\n                onClose={onOptionsClose}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\"\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\"\n                }}\n              >\n                <MenuItem\n                  onClick={() => {\n                    this.setState({\n                      ...this.state,\n                      menuAnchor: undefined,\n                      exportOpen: true\n                    });\n                  }}\n                >\n                  Export DAO Config\n                </MenuItem>\n                <MenuItem onClick={onCopyLog}>Copy Log</MenuItem>\n              </Menu>\n              {started ? (\n                <Typography variant={\"h6\"}>Deployment Log</Typography>\n              ) : (\n                <Typography variant={\"h6\"}>Launch Your DAO</Typography>\n              )}\n              {started && !finished ? (\n                <CircularProgress className={classes.progressBar} />\n              ) : (\n                <Button\n                  onClick={this.onStart}\n                  color={\"primary\"}\n                  variant={\"outlined\"}\n                >\n                  {finished\n                    ? result === undefined\n                      ? \"Retry?\"\n                      : \"Re-Deploy\"\n                    : \"Deploy\"}\n                </Button>\n              )}\n            </Grid>\n          </ExpansionPanelSummary>\n          <Divider />\n          <ExpansionPanelDetails>\n            <Grid container direction={\"column-reverse\"}>\n              <Log />\n              <Typography variant={\"subtitle2\"}>\n                {ethSpent} ETH Spent\n              </Typography>\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExportDialog />\n      </>\n    );\n  }\n}\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    logHeader: {\n      background: \"#e4e4e4\"\n    },\n    lightLine: {\n      padding: \"10px\",\n      background: \"#e4e4e4\",\n      maxWidth: \"100%\",\n      boxShadow: \"none\"\n    },\n    darkLine: {\n      padding: \"10px\",\n      background: \"#c7c7c7\",\n      maxWidth: \"100%\",\n      boxShadow: \"none\"\n    },\n    confirmButton: {\n      fontSize: \"0.7125rem\"\n    },\n    progressBar: {\n      width: \"23px !important\",\n      height: \"23px  !important\"\n    },\n    dialog: {\n      maxWidth: \"690px\"\n    },\n    result: {\n      width: \"100%\",\n      background: \"#e4e4e4\",\n      overflowX: \"hidden\",\n      padding: \"10px\",\n      whiteSpace: \"pre\"\n    },\n    resultWrapper: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    successText: {\n      width: \"100%\",\n      textAlign: \"center\"\n    },\n    resultsDivider: {\n      marginTop: \"20px\",\n      marginBottom: \"20px\"\n    }\n  });\n\nexport default withStyles(styles)(Migrator);\n","import * as React from \"react\";\nimport {\n  createStyles,\n  Theme,\n  WithStyles,\n  withStyles,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport { DAOcreatorState, toDAOMigrationParams } from \"lib/state\";\nimport { DAOMigrationResult } from \"lib/dependency/arc\";\nimport Migrator from \"components/common/dao/Migrator\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {\n  dao: DAOcreatorState;\n}\n\nclass DeployStep extends React.Component<Props> {\n  render() {\n    const { dao, classes } = this.props;\n\n    return (\n      <Card>\n        <CardContent className={classes.root}>\n          <Migrator\n            dao={toDAOMigrationParams(dao)}\n            onComplete={(result: DAOMigrationResult) => {\n              console.log(result);\n            }}\n            onAbort={(error: Error) => {\n              console.log(error.message);\n            }}\n          />\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: \"100%\"\n    }\n  });\n\nexport default withStyles(styles)(DeployStep);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  IconButton\n} from \"@material-ui/core\";\nimport SupportIcon from \"@material-ui/icons/ContactSupport\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {}\n\nconst Support: React.SFC<Props> = ({ classes }) => (\n  <IconButton\n    onClick={() => window.open(\"https://dorgtech.typeform.com/to/IaeXKv\")}\n    className={classes.supportButton}\n  >\n    <SupportIcon className={classes.supportIcon} />\n  </IconButton>\n);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    supportButton: {\n      position: \"fixed\",\n      right: \"5px\",\n      bottom: \"5px\",\n      color: \"#4bd2c6\",\n      backgroundColor: \"rgba(2, 46, 46, 0.5)\",\n      \"&:hover\": {\n        backgroundColor: \"black\"\n      }\n    },\n    supportIcon: {\n      color: \"#4bd2c6\"\n    }\n  });\n\nexport default withStyles(styles)(Support);\n","import * as React from \"react\";\nimport {\n  withStyles,\n  Theme,\n  WithStyles,\n  createStyles,\n  Stepper,\n  Step,\n  StepLabel,\n  Card,\n  Button\n} from \"@material-ui/core\";\nimport NamingStep from \"./NamingStep\";\nimport MembersStep from \"./MembersStep\";\nimport SchemesStep from \"./SchemesStep\";\nimport ReviewStep from \"./ReviewStep\";\nimport DeployStep from \"./DeployStep\";\nimport Support from \"components/common/Support\";\nimport { DAOForm, DAOConfigForm, MembersForm, SchemesForm } from \"lib/forms\";\n\n// eslint-disable-next-line\ninterface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  step: number;\n}\n\ninterface Step {\n  title: string;\n  form: DAOForm | DAOConfigForm | MembersForm | SchemesForm;\n  Component: any;\n  props?: {\n    [name: string]: any;\n  };\n}\n\nclass DAOcreator extends React.Component<Props, State> {\n  form = new DAOForm();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      step: 0\n    };\n  }\n\n  render() {\n    const steps: Step[] = [\n      {\n        title: \"Name\",\n        form: this.form.$.config,\n        Component: NamingStep,\n        props: {\n          daoForm: this.form,\n          toReviewStep: () => {\n            this.setState({\n              step: 3\n            });\n          }\n        }\n      },\n      {\n        title: \"Schemes\",\n        form: this.form.$.schemes,\n        Component: SchemesStep\n      },\n      {\n        title: \"Members\",\n        form: this.form.$.members,\n        Component: MembersStep,\n        props: {\n          getDAOTokenSymbol: () => this.form.$.config.$.tokenSymbol.value\n        }\n      },\n      {\n        title: \"Review\",\n        form: this.form,\n        Component: ReviewStep,\n        props: {\n          setStep: (step: number) => {\n            this.setState({\n              step\n            });\n          }\n        }\n      },\n      {\n        title: \"Deploy\",\n        form: this.form,\n        Component: DeployStep,\n        props: {\n          dao: this.form.toState()\n        }\n      }\n    ];\n    const { classes } = this.props;\n    const { step } = this.state;\n    const isLastStep = step === steps.length - 1;\n    const { form, Component, props } = steps[step];\n\n    const previousStep = async () => {\n      this.setState({\n        step: this.state.step - 1\n      });\n    };\n\n    const nextStep = async () => {\n      const res = await form.validate();\n      const { step } = this.state;\n\n      if (!res.hasError) {\n        this.setState({\n          step: step + 1\n        });\n      } else {\n        if (form.error) {\n          this.setState({\n            step\n          });\n        } else {\n          this.setState({\n            step\n          });\n        }\n      }\n    };\n\n    return (\n      <>\n        <div className={classes.root}>\n          <Card>\n            <Stepper className={classes.stepper} activeStep={step}>\n              {steps.map(thisStep => (\n                <Step key={thisStep.title}>\n                  <StepLabel>{thisStep.title}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n          </Card>\n          <div className={classes.content}>\n            <Component form={form} {...props} />\n          </div>\n          <div>\n            <Button\n              variant={\"contained\"}\n              color={\"primary\"}\n              disabled={step === 0}\n              onClick={previousStep}\n              className={classes.button}\n            >\n              Back\n            </Button>\n            {isLastStep ? (\n              <></>\n            ) : (\n              <Button\n                variant={\"contained\"}\n                color={\"primary\"}\n                onClick={nextStep}\n                className={classes.button}\n              >\n                Next\n              </Button>\n            )}\n          </div>\n        </div>\n        <Support />\n      </>\n    );\n  }\n}\n\n// STYLE\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 30,\n      paddingTop: 50,\n      justifySelf: \"center\",\n      // bring forward (infront of background)\n      position: \"relative\",\n      pointerEvents: \"none\",\n      maxWidth: 1000,\n      margin: \"auto\"\n    },\n    stepper: {\n      pointerEvents: \"all\"\n    },\n    content: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      pointerEvents: \"all\"\n    },\n    button: {\n      marginRight: theme.spacing(1),\n      backgroundColor: \"rgba(167, 167, 167, 0.77)!important\", //TODO: find out why desabled buttons disapper, then fix it and remove this\n      pointerEvents: \"all\"\n    }\n  });\n\nexport default withStyles(styles)(DAOcreator);\n","import * as React from \"react\";\nimport { SFC } from \"react\";\nimport { Route, Switch } from \"react-router\";\n\nimport TopBar from \"./shell/TopBar\";\nimport Background from \"./shell/Background\";\nimport Landing from \"./pages/Landing\";\nimport About from \"./pages/About\";\nimport Dapp from \"./pages/Dapp\";\nimport DAOcreator from \"./pages/DAOcreator\";\n\nconst App: SFC = () => (\n  <div\n    style={{\n      position: \"absolute\",\n      width: \"100vw\",\n      height: \"100vh\",\n      minWidth: \"450px\",\n      maxWidth: \"100%\"\n    }}\n  >\n    <Background />\n    <TopBar />\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/dapp\" component={Dapp} />\n      <Route exact path=\"/dao-creator\" component={DAOcreator} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History } from \"history\";\n\nconst reducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history)\n  });\n\nexport default reducer;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#2c4b56\",\n      contrastText: \"#fafafa\"\n    },\n    secondary: {\n      main: \"#ffa800\",\n      contrastText: \"#1a1a1a\"\n    }\n  }\n});\n\nexport default theme;\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { Provider } from \"react-redux\"\n\nimport { configureStore } from \"./lib/redux/store\"\nimport { createHashHistory } from \"history\"\n\nimport theme from \"./style/theme\"\n\nconst history = createHashHistory()\nconst store = configureStore(history)\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n)\n","import { routerMiddleware } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { applyMiddleware, compose, createStore, Store } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport reducer from \"lib/redux/reducers\";\n\nexport function configureStore(history: History): Store<any> {\n  // Redux DevTools\n  const composeEnhancers =\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(\n    reducer(history),\n    composeEnhancers(\n      applyMiddleware(routerMiddleware(history), thunkMiddleware)\n    )\n  );\n\n  return store;\n}\n","import BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport * as typeValidation from \"./typeValidation\";\nimport * as typeConversion from \"./typeConversion\";\n\nexport * from \"./types\";\nexport const TypeValidation = typeValidation;\nexport const TypeConversion = typeConversion;\n\nlet readyWeb3: Web3;\n\nexport const getWeb3 = async (): Promise<any> => {\n  if (readyWeb3 != null) {\n    const accounts = await readyWeb3.eth.getAccounts();\n    readyWeb3.eth.defaultAccount = accounts[0];\n    return readyWeb3;\n  }\n  const ethereum = (window as any).ethereum;\n  const web3 = (window as any).web3;\n\n  if (ethereum) {\n    try {\n      // Request account access if needed\n      await ethereum.enable();\n\n      // Acccounts now exposed\n      readyWeb3 = new Web3(ethereum);\n      const accounts = await readyWeb3.eth.getAccounts();\n      readyWeb3.eth.defaultAccount = accounts[0];\n    } catch (error) {\n      return Promise.reject(\"User denied account access...\");\n    }\n  }\n  // Legacy dapp browsers...\n  else if (web3) {\n    readyWeb3 = new Web3(web3.currentProvider);\n    const accounts = await readyWeb3.eth.getAccounts();\n    readyWeb3.eth.defaultAccount = accounts[0];\n  }\n  // Non-dapp browsers...\n  else {\n    return Promise.reject(\n      \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n    );\n  }\n\n  return readyWeb3;\n};\n\nexport const getDefaultOpts = async (): Promise<any> => {\n  const web3 = await getWeb3();\n  const block = await web3.eth.getBlock(\"latest\");\n  return {\n    from: web3.eth.defaultAccount,\n    gas: block.gasLimit - 100000,\n    gasPrice: web3.utils.toWei(\"7\", \"gwei\")\n  };\n};\n\nexport const getNetworkName = async (): Promise<string> => {\n  const web3 = await getWeb3();\n  let network = await web3.eth.net.getNetworkType();\n\n  if (network === \"main\") {\n    network = \"mainnet\";\n  }\n\n  return network;\n};\n\nexport const keccak256 = (value: string | BN): string => {\n  if (readyWeb3 == null) {\n    throw Error(\"Web3 not initialized. Please call 'getWeb3'\");\n  }\n\n  if (typeof value === \"string\") {\n    return readyWeb3.utils.keccak256(value);\n  } else {\n    return readyWeb3.utils.keccak256(value.toString());\n  }\n};\n\nexport const encodeParameters = (\n  types: string[],\n  parameters: any[]\n): string => {\n  if (readyWeb3 == null) {\n    throw Error(\"Web3 not initialized. Please call 'getWeb3'\");\n  }\n\n  return readyWeb3.eth.abi.encodeParameters(types, parameters);\n};\n"],"sourceRoot":""}